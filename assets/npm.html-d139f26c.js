import{_ as e,p as n,q as a,Q as d,a1 as i}from"./framework-7e1a102e.js";const r={},l=i(`<h1 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h1><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> error</h3><ul><li>npm WARN config global <code>--global</code>, <code>--local</code> are deprecated. Use <code>--location=global</code> instead. 将 npm 和 npm.cmd 两个文件中的 prefix -g 修改为 prefix --location=global （文件在node安装目录，例： C:\\Program Files\\nodejs）</li></ul><hr><ul><li><p>换源 <code>npm config set registry https://registry.npmmirror.com</code> <code>npm config set registry http://registry.npm.taobao.org/</code></p></li><li><p>cnpm <code>npm install -g cnpm --registry=https://registry.npmmirror.com</code></p></li><li><p>引入包中的某个文件 <code>import xx from &#39;包名/xx/xx/x&#39;</code> 该地址会被解析为 <code>./node_modules/包名/xx/xx/x.js</code> 在 Node.js 模块系统中，require 核心模块 &gt; &#39;./&#39; 之类 &gt; 当前 package 的 node_modules &gt; 当前 package 目录上层 node_modules &gt; ... &gt; 全局 node_modules 目录 这样找到的一般是文件夹，文件目录下有 package.json，就根据它的 main 字段找到 js 文件。如果没有 package.json，那就默认取文件夹下的 index.js</p></li><li><p>npm ls –g --depth=1 2&gt;/dev/null | grep generator- 列出npm全局安装的包,npm包一般会依赖别的包所以是按照树状来显示的; depth 限制往下一层目录，后面是过滤错误信息。</p></li><li><p>npm list -g --depth 0 查看全局包</p></li><li><p>--unsafe-perm 表示可以以 root 运行包</p></li><li><p>npm uninstall -g xxx 删除全局包</p></li><li><p>npm root -g 查看全局安装路径</p></li><li><p>npm 传递参数</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scripts 命令：&quot;npmRun&quot;: &quot;node&quot;
执行：npm run npmRun -- a.js  -&gt; node a.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>npm install 和 publish 后都会触发 prepare 脚本</p></li><li><p>npm update packageName</p></li><li><p>安装指定版本 <code>npm install packageName@3.1.2</code></p></li></ul><h2 id="利用-verdaccio-发布私包" tabindex="-1"><a class="header-anchor" href="#利用-verdaccio-发布私包" aria-hidden="true">#</a> 利用 Verdaccio 发布私包</h2><p>参考 /be/node/publishNpm.md</p><h1 id="yrm-推荐使用" tabindex="-1"><a class="header-anchor" href="#yrm-推荐使用" aria-hidden="true">#</a> yrm （推荐使用）</h1><p>安装 npm install -g yrm 用 yarn 安装， yrm 命令不会被识别</p><p>yrm -h 查看命令</p><p>添加源： <code>yrm add anyName http://xxx.xx:4873</code></p><p>用法同 nrm</p><h1 id="nrm" tabindex="-1"><a class="header-anchor" href="#nrm" aria-hidden="true">#</a> nrm</h1><p>只是 npm 的源管理，也会影响 yarn 的源 但是通过 yarn config get registry 获取到的源还是没有变化</p><p>安装： <code>npm install -g nrm</code></p><ul><li><p><code>nrm ls</code> 列出所有源 <code>nrm use cnpm</code> 使用某个(cnpm)源 具体参考 https://github.com/Pana/nrm</p></li><li><p><code>nrm use name</code> 使用哪个源 <code>nrm add name url</code> <code>nrm del</code> <code>nrm login</code></p></li></ul><h1 id="npx" tabindex="-1"><a class="header-anchor" href="#npx" aria-hidden="true">#</a> npx</h1><ol><li>调用项目内部安装的模块</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>node-modules/.bin/项目

npx 项目
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>避免全局安装模块 <code>npx create-react-app my-react </code> 运行后会先下载create-react-app到临时目录，用过后删除</p></li><li><p>使用不同版本的none 原理是使用npm的node模块，用后就删除</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx node@0.12.8 -v

npx -p node@8 npm run build
npx -p m1 -p m2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-p 指定要安装的模块 可多个</p><ol start="4"><li>执行github源码 <code>npx http://some path </code> 必须包含package.json和入口文件</li></ol>`,25);function p(o,t){return n(),a("div",null,[d(`
 * @Author: warren
 * @Date: 2022-07-15 11:10:29
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2023-01-05 14:36:06
`),l])}const s=e(r,[["render",p],["__file","npm.html.vue"]]);export{s as default};

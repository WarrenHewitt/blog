import{_ as o,M as c,p as i,q as l,R as n,N as a,V as p,t as s,a1 as u}from"./framework-7e1a102e.js";const d={},r={class:"table-of-contents"},k=u(`<p>[toc]</p><h1 id="node-删除和复制文件或文件夹" tabindex="-1"><a class="header-anchor" href="#node-删除和复制文件或文件夹" aria-hidden="true">#</a> node 删除和复制文件或文件夹</h1><blockquote><p>创建时间：2019-08-12</p></blockquote><blockquote><p>注意：在win10，v10.16.1 环境运行无问题</p></blockquote><hr><p>首先引入相关包(会在使用处具体说明)：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fsEx <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@des</span> 该包为实验性API
 */</span>
<span class="token keyword">const</span> fsPromises <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promises
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对文件的操作" tabindex="-1"><a class="header-anchor" href="#对文件的操作" aria-hidden="true">#</a> 对文件的操作</h2><h3 id="复制文件" tabindex="-1"><a class="header-anchor" href="#复制文件" aria-hidden="true">#</a> 复制文件</h3><p>这里列出三种方式：</p><ol><li>使用 writeFileSync 和 readFileSync 结合</li><li>使用 copyFileSync</li><li>使用promises的copyFile方法</li></ol><p>其中的同步或异步方法可酌情更改，实现代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> copiedPath<span class="token operator">:</span> String <span class="token punctuation">}</span></span> (被复制文件的地址，相对地址)
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> resultPath<span class="token operator">:</span> String <span class="token punctuation">}</span></span> (放置复制文件的地址，相对地址)
 */</span>
<span class="token keyword">function</span> <span class="token function">copyFile</span><span class="token punctuation">(</span><span class="token parameter">copiedPath<span class="token punctuation">,</span> resultPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    copiedPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> copiedPath<span class="token punctuation">)</span>
    resultPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> resultPath<span class="token punctuation">)</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * <span class="token keyword">@des</span> 方式一
         */</span>
        <span class="token comment">// fs.writeFileSync(resultPath, fs.readFileSync(copiedPath))</span>
        <span class="token doc-comment comment">/**
         * <span class="token keyword">@des</span> 方式二
         */</span>
        <span class="token comment">// fs.copyFileSync(copiedPath, resultPath)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@des</span> 方式三
     */</span>
    fsPromises<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>copiedPath<span class="token punctuation">,</span> resultPath<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除文件" tabindex="-1"><a class="header-anchor" href="#删除文件" aria-hidden="true">#</a> 删除文件</h3><p>使用 <code>unlinkSync</code> 方法，实现代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> delPath：String <span class="token punctuation">}</span></span> <span class="token parameter">（需要删除文件的地址）</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> direct：Boolean <span class="token punctuation">}</span></span> <span class="token parameter">（是否需要处理地址）</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">deleteFile</span><span class="token punctuation">(</span><span class="token parameter">delPath<span class="token punctuation">,</span> direct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    delPath <span class="token operator">=</span> direct <span class="token operator">?</span> delPath <span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> delPath<span class="token punctuation">)</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * <span class="token keyword">@des</span> 判断文件或文件夹是否存在
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>delPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>delPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;inexistence path：&#39;</span><span class="token punctuation">,</span> delPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;del error&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对文件夹-目录-的操作" tabindex="-1"><a class="header-anchor" href="#对文件夹-目录-的操作" aria-hidden="true">#</a> 对文件夹(目录)的操作</h2><p>以下代码有引用，复制文件相关方法</p><h3 id="复制文件夹" tabindex="-1"><a class="header-anchor" href="#复制文件夹" aria-hidden="true">#</a> 复制文件夹</h3><p>使用了两种方式：</p><ol><li>child_process</li><li>递归的读取文件和文件夹再在指定地址创建</li></ol><p>实现代码和释意如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@des</span> 参数解释同上
 */</span>
<span class="token keyword">function</span> <span class="token function">copyFolder</span><span class="token punctuation">(</span><span class="token parameter">copiedPath<span class="token punctuation">,</span> resultPath<span class="token punctuation">,</span> direct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>direct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        copiedPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> copiedPath<span class="token punctuation">)</span>
        resultPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> resultPath<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">createDir</span> <span class="token punctuation">(</span><span class="token parameter">dirPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span>        
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>copiedPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createDir</span><span class="token punctuation">(</span>resultPath<span class="token punctuation">)</span>
        <span class="token doc-comment comment">/**
         * <span class="token keyword">@des</span> 方式一：利用子进程操作命令行方式
         */</span>
        <span class="token comment">// child_process.spawn(&#39;cp&#39;, [&#39;-r&#39;, copiedPath, resultPath])</span>

        <span class="token doc-comment comment">/**
         * <span class="token keyword">@des</span> 方式二：
         */</span>
        <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>copiedPath<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">withFileTypes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> cf <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">const</span> ccp <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>copiedPath<span class="token punctuation">,</span> cf<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
            <span class="token keyword">const</span> crp <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>resultPath<span class="token punctuation">,</span> cf<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token doc-comment comment">/**
                 * <span class="token keyword">@des</span> 创建文件,使用流的形式可以读写大文件
                 */</span>
                <span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>ccp<span class="token punctuation">)</span>
                <span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>crp<span class="token punctuation">)</span>
                readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token doc-comment comment">/**
                     * <span class="token keyword">@des</span> 判断读(R_OK | W_OK)写权限
                     */</span>
                    fs<span class="token punctuation">.</span><span class="token function">accessSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>crp<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">W_OK</span><span class="token punctuation">)</span>
                    <span class="token function">copyFolder</span><span class="token punctuation">(</span>ccp<span class="token punctuation">,</span> crp<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;folder write error:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;do not exist path: &#39;</span><span class="token punctuation">,</span> copiedPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除文件夹" tabindex="-1"><a class="header-anchor" href="#删除文件夹" aria-hidden="true">#</a> 删除文件夹</h3><p>递归文件和文件夹，逐个删除</p><p>实现代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deleteFolder</span><span class="token punctuation">(</span><span class="token parameter">delPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    delPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> delPath<span class="token punctuation">)</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>delPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token function-variable function">delFn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> dirPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">delFn</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token function">deleteFile</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token doc-comment comment">/**
                * <span class="token keyword">@des</span> 只能删空文件夹
                */</span>
                fs<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">delFn</span><span class="token punctuation">(</span>delPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;do not exist: &#39;</span><span class="token punctuation">,</span> delPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;del folder error&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行示例" tabindex="-1"><a class="header-anchor" href="#执行示例" aria-hidden="true">#</a> 执行示例</h2><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|- index.js(主要执行代码)
|- a
    |- a.txt
    |- b.txt
|- c
    |- a.txt
    |- b.txt
|- p
    |- a.txt
    |- b.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据传入的参数不同，执行相应的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@des</span> 获取命令行传递的参数
 */</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@des</span> 请根据不同的条件传递参数
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;copyFile&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">copyFile</span><span class="token punctuation">(</span><span class="token string">&#39;./p/a.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./c/k.txt&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;copyFolder&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">copyFolder</span><span class="token punctuation">(</span><span class="token string">&#39;./p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./a&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;delFile&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">deleteFile</span><span class="token punctuation">(</span><span class="token string">&#39;./c/ss.txt&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;delFolder&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">deleteFolder</span><span class="token punctuation">(</span><span class="token string">&#39;./a&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令行传参数" tabindex="-1"><a class="header-anchor" href="#命令行传参数" aria-hidden="true">#</a> 命令行传参数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@des</span> 命令行传参
 * 执行 node ./xxx/index.js 111 222
 * 输出：
 * 0: C:\\Program Files\\nodejs\\node.exe
 * 1: G:\\GitHub\\xxx\\xxxx\\index.js
 * 2: 111
 * 3: 222
 */</span>
process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="利用-fs-extra-实现" tabindex="-1"><a class="header-anchor" href="#利用-fs-extra-实现" aria-hidden="true">#</a> 利用 fs-extra 实现</h2><p>这是对fs相关方法的封装，使用更简单快捷</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@des</span> fs-extra 包实现
 * api参考: https://github.com/jprichardson/node-fs-extra
 */</span>

<span class="token keyword">function</span> <span class="token function">fsExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> fsEx<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),v={href:"https://github.com/WarrenHewitt/node-koa/tree/master/practice/moveFileOrFloder",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/WarrenHewitt/blog/issues",target:"_blank",rel:"noopener noreferrer"};function b(h,f){const t=c("router-link"),e=c("ExternalLinkIcon");return i(),l("div",null,[n("nav",r,[n("ul",null,[n("li",null,[a(t,{to:"#对文件的操作"},{default:p(()=>[s("对文件的操作")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#复制文件"},{default:p(()=>[s("复制文件")]),_:1})]),n("li",null,[a(t,{to:"#删除文件"},{default:p(()=>[s("删除文件")]),_:1})])])]),n("li",null,[a(t,{to:"#对文件夹-目录-的操作"},{default:p(()=>[s("对文件夹(目录)的操作")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#复制文件夹"},{default:p(()=>[s("复制文件夹")]),_:1})]),n("li",null,[a(t,{to:"#删除文件夹"},{default:p(()=>[s("删除文件夹")]),_:1})])])]),n("li",null,[a(t,{to:"#执行示例"},{default:p(()=>[s("执行示例")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#目录结构"},{default:p(()=>[s("目录结构")]),_:1})]),n("li",null,[a(t,{to:"#命令行传参数"},{default:p(()=>[s("命令行传参数")]),_:1})])])]),n("li",null,[a(t,{to:"#利用-fs-extra-实现"},{default:p(()=>[s("利用 fs-extra 实现")]),_:1})])])]),k,n("p",null,[s("可执行源码： "),n("a",v,[s("github 链接"),a(e)])]),n("blockquote",null,[n("p",null,[s("欢迎交流 "),n("a",m,[s("Github"),a(e)])])])])}const g=o(d,[["render",b],["__file","moveFileOrfolder.html.vue"]]);export{g as default};

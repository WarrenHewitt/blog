import{_ as i,M as l,p as o,q as c,R as n,N as a,V as t,t as s,a1 as u}from"./framework-7e1a102e.js";const r={},d={class:"table-of-contents"},k=n("p",null,"[toc]",-1),m=n("h2",{id:"uni-app",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uni-app","aria-hidden":"true"},"#"),s(" uni-app")],-1),v={href:"https://gitee.com/hew_176/uni-app-demo",target:"_blank",rel:"noopener noreferrer"},g=u(`<h2 id="移动端遇到的问题及处理方式" tabindex="-1"><a class="header-anchor" href="#移动端遇到的问题及处理方式" aria-hidden="true">#</a> 移动端遇到的问题及处理方式</h2><ul><li>ios8 以下不支持sessionStorage</li></ul><hr><ul><li>input button 标签有：outline</li></ul><hr><ul><li>eruda 存在影响页面元素的scroll情况，可能是元素不发滚动</li></ul><hr><ul><li>关闭 chrome 的下拉刷新 body 设置css样式 <code>overscroll-behavior-y: contain;</code></li></ul><hr><ul><li>获取屏幕宽度，兼容方案</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var w = window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><ul><li>禁止用户选择 -webkit-user-select: none; user-select: none;</li></ul><hr><ul><li>ios横竖屏切换字体变大 -webkit-text-size-adjust: 100%;</li></ul><hr><ul><li>下载app方式 a标签地址 <ol><li>ios: &#39;itms-apps://itunes.apple.com/cn/app/%E5%87%AF%E5%8A%B1%E7%A8%8B/id840880551?mt=8&#39;</li><li>android： 直接下载地址</li></ol></li></ul><hr><ul><li>打开app <ol><li>查询app的URL Scheme(如微信的为weixin) &lt; a href=&quot;weixin://&quot; &gt;打开微信&lt; /a&gt;</li></ol></li></ul><hr><ul><li>打电话 发短信 发邮件 <code>&lt;a href=&#39;tel:1234565&#39;&gt;</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> tagA <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> typeObj <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;tel:10086&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sms</span><span class="token operator">:</span> <span class="token string">&#39;sms:10086,10010?body=message&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">/* 给两个人发 mailto:p1@163.com,p2@126.com */</span>
        <span class="token comment">/* 主题 mailto:p1@163.com?subject=主题 */</span>
        <span class="token comment">/* 抄送 mailto:p1@163.com?subject=主题 mailto&amp;cc=p3@126.com */</span>
        <span class="token literal-property property">mail</span><span class="token operator">:</span> <span class="token string">&#39;mailto:t1@163.com?subject=Testing&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    tagA<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> typeObj<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span>
    tagA<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>禁止识别手机号 <ol><li>&lt; meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</li></ol></li></ul><hr><ul><li>去掉ios长按时的阴影 <ol><li>*{-webkit-tap-highlight-color: transparent;}</li></ol></li></ul><hr><ul><li>兼容iPhoneX <ol><li>env()替代constant() constant 从iOS11.2 Beta开始会被弃用</li><li>设置可视窗口大小 viewport-fit=cover|contain|auto</li></ol></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;meta name=&quot;viewport&quot; content=&quot;viewport-fit=cover&quot;&gt; 只能设置cover
body {
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom);
}
// env() 跟 constant() 需要同时存在，而且顺序不能换
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>ios的 input 有默认的 padding和 margin 以及一些Android会默认有白色背景</li></ul><hr><ul><li>页面有滑动时 在 ios 中，底部的白色或黑色的背景被拉上来，没有回弹，是原生框架问题</li></ul><hr><ul><li>设置border0.5px Android 会处理为1px ios 会处理为0.5px</li></ul><hr><ul><li>防止滑动穿透(例：阻止 touchmove 的default事件)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ele<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;touchmove&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token comment">// 如果底部元素内容依然可以滑动， 将底部的元素设置overflow:hidden 关闭弹出层后将其还原</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>调用原生app提供的方法时应该用try catch 来防止报错后整个H5应用崩溃 <strong>注意向前兼容老版本没有app提供的方法</strong></li></ul><hr><ul><li>设置或者获取滚动条位置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token comment">// 其它</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> height <span class="token comment">// ios</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>设置了元素overflow：auto 在 ios 中滚动不流畅，设置-webkit-overflow-scrolling: touch</li></ul><hr><ul><li>1px 用scale缩放0.5 达到0.5像素效果</li></ul><hr><ul><li>多行文本溢出 box-orient：vertical；line-clamp：2</li></ul><hr><ul><li>ios 弹性滚动 over-scroll：touch</li></ul><hr><ul><li>click 300ms 延迟</li><li>tap 300ms延迟导致 底层的元素的cklic事件被触发 所以底层最好也用tap事件</li></ul><hr><ul><li>window.location.reload() 在部分Android机型无法指行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 兼容做法</span>
window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里用 replace 是为了生成新 url，注意不同项目做法会不同</span>
    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#.*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>ios 在弹出层中双击任意元素，底部页面自动上滑</li></ul><p>当弹出层出现时，将body(也可能是其它元素)设置如下css，隐藏时置空</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>//<span class="token property">移动端如果只设置overflow</span><span class="token punctuation">:</span>hidden会无效
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><ul><li>与app交互传递参数时，为保证 ios与 Android都可行，传字符串</li></ul><hr><ul><li>当接收的时间字符串有 +0800时，在ios中直接用new Date()方法无效，要将时间字符串中的T改为空格，-改为/</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iphone</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    timeString <span class="token operator">=</span> timeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">T</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    timeString <span class="token operator">=</span> timeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="移动端相关说明" tabindex="-1"><a class="header-anchor" href="#移动端相关说明" aria-hidden="true">#</a> 移动端相关说明</h2><ul><li>移动端 兼容所有h5</li><li>基于webview</li><li>基于webkit</li><li>定高 宽度百分比 flex 媒体查询</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token atrule"><span class="token rule">@media</span> 媒体类型<span class="token punctuation">(</span>screen<span class="token punctuation">,</span>print<span class="token punctuation">)</span> <span class="token keyword">and</span> 媒体特性（max-width）</span><span class="token punctuation">{</span>
     css
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,68),h=n("link",{rel:"stylesheet",href:"",media:"screen and (max-width:320px)"},null,-1),b=n("p",null,"rem ios6+ android 2.1+",-1),x=n("p",null,"px :css pixels 逻辑像素，浏览器使用的抽象单位 dp,pt: device independent pixels 设备独立像素 物理像素 dpr：设备像素缩放比(若为2：等同于页面扩大了一倍，要用initial-scale：0.5变回来) js 用 window.devicePixelRatio 来获取 设备像素比(dpr) ＝ 物理像素 / 设备独立像素 CSS中，可以通过-webkit-device-pixel-ratio，-webkit-min-device-pixel-ratio和 -webkit-max-device-pixel-ratio进行媒体查询，对不同dpr的设备做适配",-1),f=n("p",null,"平面上 1px = dpr * dpr * dp 维度上 1px = dpr * dp",-1),w=n("p",null,"flex 4.4以上",-1);function _(y,j){const e=l("router-link"),p=l("ExternalLinkIcon");return o(),c("div",null,[n("nav",d,[n("ul",null,[n("li",null,[a(e,{to:"#uni-app"},{default:t(()=>[s("uni-app")]),_:1})]),n("li",null,[a(e,{to:"#移动端遇到的问题及处理方式"},{default:t(()=>[s("移动端遇到的问题及处理方式")]),_:1})]),n("li",null,[a(e,{to:"#移动端相关说明"},{default:t(()=>[s("移动端相关说明")]),_:1})])])]),k,m,n("p",null,[s("参考 "),n("a",v,[s("地址"),a(p)]),s(" readme")]),g,s(),h,b,x,f,w])}const q=i(r,[["render",_],["__file","webApp.html.vue"]]);export{q as default};

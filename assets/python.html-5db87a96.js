import{_ as t,M as l,p,q as o,R as n,N as s,V as e,t as i,a1 as c}from"./framework-7e1a102e.js";const r={},d={class:"table-of-contents"},u=c(`<p>[toc]</p><hr><ul><li>Ctrl+Z，再按回车 退出命令行</li><li>python -m pip install --upgrade pip 升级pip</li><li>A-Z 65-90; a-z:97-122</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><ul><li>官网下载安装包</li><li>点击安装，注意勾选加入到环境变量</li><li>命令窗口输入 python 如果进入 交互式环境 证明成功</li></ul><h3 id="包管理" tabindex="-1"><a class="header-anchor" href="#包管理" aria-hidden="true">#</a> 包管理</h3><ul><li><p><code>pip install virtualenv</code></p></li><li><p>创建虚拟环境 <code>virtualenv venv</code> 默认在当前目录创建一个虚拟环境venv 目录, 进入到 venv/Scripts 命令行输入 activate/deactivate 激活和退出虚拟环境</p></li></ul><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><blockquote><p>官方地址 https://docs.python.org/3/tutorial/index.html</p></blockquote><p><code>pass</code>: 仅仅是占位 因为有的地方如果没有占位会报错，比如函数声明不能是空函数</p><hr><h4 id="win10-开机获取本机ip并写入文件中" tabindex="-1"><a class="header-anchor" href="#win10-开机获取本机ip并写入文件中" aria-hidden="true">#</a> win10 开机获取本机IP并写入文件中</h4><p>运行：shell:startup</p><p>创建 .bat文件(如a.bat) 放入打开的启动文件夹</p><p>.bat文件内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@echo off
start cmd /k &quot;python文件地址 &amp;&amp; python ip.py&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>python文件内容</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> socket

hostname <span class="token operator">=</span> socket<span class="token punctuation">.</span>getfqdn<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>gethostname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
address <span class="token operator">=</span> socket<span class="token punctuation">.</span>gethostbyname<span class="token punctuation">(</span>hostname<span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;./ip.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> hostname <span class="token operator">+</span> <span class="token string">&#39;：&#39;</span> <span class="token operator">+</span> address
    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;没有文件&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;finally success:&#39;</span> <span class="token operator">+</span> address<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="django" tabindex="-1"><a class="header-anchor" href="#django" aria-hidden="true">#</a> Django</h3><h4 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h4><blockquote><p>参考官网 https://docs.djangoproject.com/en/2.1/topics/install/#installing-official-release</p></blockquote><ul><li>注意与python版本对应</li><li>使用pip安装(时间慢)</li></ul><h4 id="项目-包含应用与配置" tabindex="-1"><a class="header-anchor" href="#项目-包含应用与配置" aria-hidden="true">#</a> 项目(包含应用与配置)</h4><ul><li>创建project: django-admin startproject mysite(名称)</li><li>进入创建的project(与manage.py同级)，创建应用: python manage.py startapp appname</li><li>添加新文件，将不会触发自动重新加载，这时你得自己手动重启服务器</li><li>监听所有服务器的公开IP（你运行 Vagrant 或想要向网络上的其它电脑展示你的成果时很有用） python manage.py runserver 0:8000; 0 是 0.0.0.0 的简写</li></ul><h5 id="文件解释" tabindex="-1"><a class="header-anchor" href="#文件解释" aria-hidden="true">#</a> 文件解释</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|- manege.py: 与项目进行交互的命令行工具集的入口
|- project name (项目名称，文件夹也是该名称)
|--- wsgi.py :python应用与web服务器之间的接口(一般不作更改)
|--- urls.py : URL 配置文件
|--- settings.py : 项目总配置文件，数据库，web应用，时间等配置
      BASE_DIR：项目根目录
      DEBUG：调试用，生产环境要关闭，打开后所有的无效访问都不会走400
      ALLOWED_HOSTS：只允许哪些域名的访问，其它的全部报400
      INSTALLED_APPS：自己创建的应用要加到这里面
      TEMPLATES：模板的配置
      _init_.py 声明模块的文件，一般内容为空，有了它，tutorial 才能在代码中被当作模块应用
|--- appname (应用名称)
|----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="scrapy" tabindex="-1"><a class="header-anchor" href="#scrapy" aria-hidden="true">#</a> scrapy</h3><ul><li>报错 Spider must return Request, BaseItem, dict or None, 表示没有返回正确yield 后面的值</li></ul><h4 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2" aria-hidden="true">#</a> 安装</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pip install Scrapy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>安装scrapy报错：Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;</p><ol><li>https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted 下载对应版本twisted的whl文件</li><li>cp:python版本</li><li>amd64：64位</li><li>下载后在文件目录下执行： pip install Twisted-18.7.0-cp37-cp37m-win_amd64.whl(文件名)</li></ol></li><li><p>scrapy startproject youName 创建项目</p></li><li><p>scrapy genspider &lt; name&gt; &lt; domain&gt; 创建spider(在项目跟目录执行)</p></li><li><p>scrapy crawl(爬) spider名称</p><ul><li>第一次执行会报错async语法错误 把用到该名称作为参数的文件全部作修改 把这个参数名改为其它即可</li><li>报错 No module named &#39;win32api&#39;： https://pypi.org/project/pypiwin32/#files（下载文件pypiwin32-223-py3-none-any.whl 执行 pip install pypiwin32-223-py3-none-any.whl ）</li></ul></li><li><p><code>[scrapy.spidermiddlewares.offsite] DEBUG: Filtered offsite request to: </code>表示request的地址和allow_domain地址冲突，被过滤。</p></li><li><p>设置 yield Request(url, callback=self.parse_item, <em><strong>dont_filter=True</strong></em>)</p></li></ul><p>导出为json scrapy crawl spider名称 -o test.json</p><p>注意配置FEED_EXPORT_ENCODING = &#39;utf-8&#39; 否则中文会被转码</p><p>报403时注意把USER_AGENT加上</p><p>text() 获取文本 @属性名 获取属性值</p><p>在父节点下使用xpath路径前要加./</p><p>去除换行空格用 xpath(&#39;normalize-space(&#39;.//div/text()&#39;)&#39;)</p><p>css:</p><ul><li><p>获取内容 css(&#39;::text&#39;)</p></li><li><p>返回属性值 response.css(&#39;.logo a::attr(href)&#39;).extract() 返回的值数组</p></li><li><p>去掉空格 python字符串对象的 strip() 方法</p></li><li><p>去掉换行 python字符串对象的 .replace(&#39;\\n&#39;, &#39;&#39;)</p></li></ul>`,40);function h(v,m){const a=l("router-link");return p(),o("div",null,[n("nav",d,[n("ul",null,[n("li",null,[s(a,{to:"#安装"},{default:e(()=>[i("安装")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#包管理"},{default:e(()=>[i("包管理")]),_:1})]),n("li",null,[s(a,{to:"#语法"},{default:e(()=>[i("语法")]),_:1})]),n("li",null,[s(a,{to:"#django"},{default:e(()=>[i("Django")]),_:1})]),n("li",null,[s(a,{to:"#scrapy"},{default:e(()=>[i("scrapy")]),_:1})])])])])]),u])}const b=t(r,[["render",h],["__file","python.html.vue"]]);export{b as default};

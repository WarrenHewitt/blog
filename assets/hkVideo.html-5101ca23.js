import{_ as n,p as s,q as a,a1 as p}from"./framework-7e1a102e.js";const t={},e=p(`<h2 id="海康视频对接" tabindex="-1"><a class="header-anchor" href="#海康视频对接" aria-hidden="true">#</a> 海康视频对接</h2><h3 id="利用-websocket" tabindex="-1"><a class="header-anchor" href="#利用-websocket" aria-hidden="true">#</a> 利用 websocket</h3><p>采用海康返回的 websocket 链接地址</p><p>下载 H5视频播放器开发包</p><p>链接 https://open.hikvision.com/download/5c67f1e2f05948198c909700?type=10</p><p>下载 文档和程序包</p><p>文档： 描述引入的 <code>h5player.min.js</code> 怎么使用</p><p>程序包: 包含一个 demo ，可以打开demo源码查看具体有哪些用法，可对应文档一起看, 有 <code>h5player.min.js</code> 等资源</p><p>直接引入 demo 中的 <code>h5player.min.js</code> <code>Decoder.js</code> <code>AudioRenderer.js</code> <code>SuperRender_10</code> <code>DecodeWorker</code> js 文件</p><p><code>DecodeWorker.js</code> 文件中的 importScripts 方法 如果报错 需要注释</p><p>如果是加载 h265 编码的视频 还会加载 <code>Decoder.wasm</code> 只需将该文件根据报错提示放置到指定目录即可；不可用script标签提前加载</p><p>如下是一个单窗口显示视频 示例代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 先引入 h5player.min.js</span>
<span class="token keyword">const</span> curIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 当前窗口下标</span>
<span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>JSPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">szId</span><span class="token operator">:</span> <span class="token string">&#39;显示视频模块的标签ID&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 需要英文字母开头 必填</span>
    <span class="token literal-property property">szBasePath</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 必填,引用H5player.min.js的js相对路径</span>
    <span class="token comment">// 当容器div#play_window有固定宽高时，可不传iWidth和iHeight，窗口大小将自适应容器宽高</span>
    <span class="token comment">// iWidth: 600,</span>
    <span class="token comment">// iHeight: 400,</span>
    <span class="token literal-property property">iMaxSplit</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 分屏播放，默认最大分屏4*4</span>
    <span class="token literal-property property">iCurrentSplit</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">openDebug</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">oStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 样式</span>
        <span class="token literal-property property">borderSelect</span><span class="token operator">:</span> <span class="token string">&#39;#FFCC00&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
player<span class="token punctuation">.</span><span class="token function">JS_Play</span><span class="token punctuation">(</span>
    wsUrl<span class="token punctuation">,</span> <span class="token comment">// wsUrl 为提供的 websocket 链接地址</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">playURL</span><span class="token operator">:</span> wsUrl<span class="token punctuation">,</span> <span class="token comment">// 流媒体播放时必传</span>
        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 解码类型：0=普通模式; 1=高级模式 默认为0  h265 格式的也可以用 普通模式</span>

        <span class="token comment">// 设置直连时的认证参数等</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    curIndex<span class="token punctuation">,</span> <span class="token comment">//当前窗口下标</span>

    <span class="token comment">// 回放参数</span>
    <span class="token comment">// startTime,</span>
    <span class="token comment">// endTime,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;realplay success&#39;</span><span class="token punctuation">)</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="利用-hls-方式" tabindex="-1"><a class="header-anchor" href="#利用-hls-方式" aria-hidden="true">#</a> 利用 HLS 方式</h3><p>官方仓库: <code>https://github.com/video-dev/hls.js</code></p><p>引入 <code>hls.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 参考</span>
<span class="token comment">// https://github.com/video-dev/hls.js/blob/master/docs/API.md#first-step-setup-and-support</span>

<span class="token keyword">var</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> videoSrc <span class="token operator">=</span> <span class="token string">&#39;https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Hls<span class="token punctuation">.</span><span class="token function">isSupported</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> hls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// bind them together</span>
    hls<span class="token punctuation">.</span><span class="token function">attachMedia</span><span class="token punctuation">(</span>video<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>Hls<span class="token punctuation">.</span>Events<span class="token punctuation">.</span><span class="token constant">MEDIA_ATTACHED</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;video and hls.js are now bound together !&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      hls<span class="token punctuation">.</span><span class="token function">loadSource</span><span class="token punctuation">(</span><span class="token string">&#39;http://my.streamURL.com/playlist.m3u8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      hls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>Hls<span class="token punctuation">.</span>Events<span class="token punctuation">.</span><span class="token constant">MANIFEST_PARSED</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token string">&#39;manifest loaded, found &#39;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>levels<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token string">&#39; quality level&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        video<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>video<span class="token punctuation">.</span><span class="token function">canPlayType</span><span class="token punctuation">(</span><span class="token string">&#39;application/vnd.apple.mpegurl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    video<span class="token punctuation">.</span>src <span class="token operator">=</span> videoSrc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","hkVideo.html.vue"]]);export{r as default};

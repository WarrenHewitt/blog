import{_ as e,M as o,p as c,q as r,R as n,N as a,V as p,t,a1 as l}from"./framework-7e1a102e.js";const i={},u={class:"table-of-contents"},k=l(`<p>[toc]</p><h1 id="数值处理相关" tabindex="-1"><a class="header-anchor" href="#数值处理相关" aria-hidden="true">#</a> 数值处理相关</h1><h2 id="保留小数点后n位" tabindex="-1"><a class="header-anchor" href="#保留小数点后n位" aria-hidden="true">#</a> 保留小数点后N位</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number<span class="token operator">:</span> Number <span class="token punctuation">}</span></span> <span class="token parameter">要处理的数</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> n<span class="token operator">:</span> Number <span class="token punctuation">}</span></span> <span class="token parameter">保留的小数点位数</span>
*/</span>
<span class="token keyword">function</span> <span class="token function">afterDecimalPoint</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> number <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> digit <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 严格的四舍五入 */</span>
        number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>number <span class="token operator">*</span> digit<span class="token punctuation">)</span><span class="token operator">/</span>digit<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 非严格的四舍五入（具体查看 笔记 =&gt; javascript toFixed说明） */</span>
        number <span class="token operator">=</span> number<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;请输入Number类型&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="将中文数字转为数字" tabindex="-1"><a class="header-anchor" href="#将中文数字转为数字" aria-hidden="true">#</a> 将中文数字转为数字</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">zhToNumber</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> zhNumber <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;零&#39;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;一&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;二&#39;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;三&#39;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;四&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;五&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;六&#39;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;七&#39;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;八&#39;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;九&#39;</span><span class="token operator">:</span> <span class="token number">9</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> zhLevel <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;十&#39;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;百&#39;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;千&#39;</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;万&#39;</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;亿&#39;</span><span class="token operator">:</span> <span class="token number">100000000</span> <span class="token punctuation">}</span>

    <span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">/* 亿或万前面的一段数字 */</span>
    <span class="token keyword">var</span> tempNum <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">var</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> current <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token string">&#39;零&#39;</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
        <span class="token comment">/* 只有亿和万前面可以包含许多级数字，所以以它们两个来分段划分数字 */</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token string">&#39;万&#39;</span> <span class="token operator">||</span> current <span class="token operator">===</span> <span class="token string">&#39;亿&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/* 把前面一段数字乘以对应的单位 */</span>
            count <span class="token operator">+=</span> tempNum <span class="token operator">*</span> zhLevel<span class="token punctuation">[</span>current<span class="token punctuation">]</span>
            tempNum <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> next <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">&amp;&amp;</span> next <span class="token operator">!==</span> <span class="token string">&#39;万&#39;</span> <span class="token operator">&amp;&amp;</span> next <span class="token operator">!==</span> <span class="token string">&#39;亿&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tempNum <span class="token operator">+=</span>  zhNumber<span class="token punctuation">[</span>current<span class="token punctuation">]</span> <span class="token operator">*</span> zhLevel<span class="token punctuation">[</span>next<span class="token punctuation">]</span>
                i<span class="token operator">++</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">/* 下一位不存在或是万或亿的情况 */</span>
                tempNum <span class="token operator">+=</span> zhNumber<span class="token punctuation">[</span>current<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count <span class="token operator">+</span> temp
<span class="token punctuation">}</span>
<span class="token function">zhToNumber</span><span class="token punctuation">(</span><span class="token string">&#39;四十二亿九千四百九十六万七千二百零九&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function d(m,v){const s=o("router-link");return c(),r("div",null,[n("nav",u,[n("ul",null,[n("li",null,[a(s,{to:"#保留小数点后n位"},{default:p(()=>[t("保留小数点后N位")]),_:1})]),n("li",null,[a(s,{to:"#将中文数字转为数字"},{default:p(()=>[t("将中文数字转为数字")]),_:1})])])]),k])}const y=e(i,[["render",d],["__file","number.html.vue"]]);export{y as default};

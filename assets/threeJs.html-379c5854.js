import{_ as p,M as e,p as t,q as o,R as n,t as c,N as l,a1 as s}from"./framework-7e1a102e.js";const i={},u=s(`<h1 id="three-js" tabindex="-1"><a class="header-anchor" href="#three-js" aria-hidden="true">#</a> three.js</h1><p>示例项目 <code>threejs-typescript/three</code></p><h2 id="数字孪生" tabindex="-1"><a class="header-anchor" href="#数字孪生" aria-hidden="true">#</a> 数字孪生</h2><p>unity ue webGL 专业的数字孪生开发软件</p><p>B/S 端可以用 unity webGL 像素流（浏览器实则是播放视频，根据用户操作播放不同的视频）</p><hr><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h2><ul><li><p>fps 监听 参考 https://github.com/mrdoob/three.js/blob/master/examples/webgl_animation_cloth.html 下的 stats</p></li><li><p>1度=π/180，1rad=180/π ==&gt; 2pi = 360 度数与弧度切换 threejs中有数学库</p></li><li><p>Three中的物体包括 Mesh,Line,Points等，它们都继承自Object3D类</p></li><li><p>视锥体，指的看起来像一个被削掉顶部的金字塔。这个形状是可以被透视camera看见和渲染的区域</p></li><li><p>renderer.domElement 返回的是 canvas 元素</p></li><li><p>WebGL可以看做是将OpenGL ES（OpenGL for Embedded Systems，OpenGL嵌入式版本，针对手机、游戏机等设备相对较轻量级的版本）移植到了网页平台,是一个底层的标准</p></li><li><p>Three.js 封装了底层的图形接口</p></li><li><p>网格 = 几何体+材质</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 数学库 https://threejs.org/docs/#api/zh/math/MathUtils */</span>
<span class="token constant">THREE</span><span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">radToDeg</span><span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span> <span class="token comment">// 弧度转为度数</span>
<span class="token constant">THREE</span><span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>  <span class="token comment">// 将度转化为弧度</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="object3d" tabindex="-1"><a class="header-anchor" href="#object3d" aria-hidden="true">#</a> Object3D</h2><ul><li>Group 它几乎和Object3D是相同的</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 参数弧度数   正方向到负方向 逆时针旋转</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="场景-scene" tabindex="-1"><a class="header-anchor" href="#场景-scene" aria-hidden="true">#</a> 场景 Scene</h2><p>继承 Object3D</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// scene.background = new THREE.Color(0xD1D1D1)  // 设置场景背脊色</span>
<span class="token comment">// scene.fog = new THREE.Fog(0xffffff, 10, 1500); // 设置雾 Fog(name: 可选, color : Integer, near : Float, far : Float) 雾，在一定的距离内设置雾</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="材质-material" tabindex="-1"><a class="header-anchor" href="#材质-material" aria-hidden="true">#</a> 材质 Material</h2><h2 id="贴图-texture" tabindex="-1"><a class="header-anchor" href="#贴图-texture" aria-hidden="true">#</a> 贴图 Texture</h2><p>创建一个纹理贴图，将其应用到一个表面，或者作为反射/折射贴图</p><p>offset 通常范围是 0-1</p><p>repeat 如果大于 1 则需要设置 wrapS wrapT 的值不为默认的 ClampToEdgeWrapping</p><p>THREE.RepeatWrapping:重复包裹 THREE.ClampToEdgeWrapping： 纹理的最后一个像素延伸到网格的边缘，默认值 THREE.MirroredRepeatWrapping：纹理镜像重复</p><ul><li><code>new THREE.SphereGeometry(150, 32, 32).scale(-1, 1,1)</code> // 通过scale 为负 调整 贴图对内对外</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createWords</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cardW <span class="token operator">=</span> <span class="token number">100</span>
    <span class="token keyword">const</span> <span class="token function-variable function">createText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> n <span class="token operator">=</span> cardW <span class="token operator">-</span> <span class="token number">5</span>
        <span class="token keyword">const</span> w <span class="token operator">=</span> <span class="token number">5</span>

        canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> cardW
        canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> cardW
        <span class="token comment">/* 绘制边框 */</span>
        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2</span>
        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span> ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&#39;bolder 16px Arial&#39;</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">&#39;文字&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&#39;bolder 14px Arial&#39;</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>globalAlpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>canvas
    <span class="token punctuation">}</span>

    <span class="token comment">/* 添加文字 */</span>
    <span class="token keyword">const</span> canvasTexture <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CanvasTexture</span><span class="token punctuation">(</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">/* 平面几何 */</span>
    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PlaneGeometry</span><span class="token punctuation">(</span>cardW<span class="token punctuation">,</span> cardW<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xffffff</span><span class="token punctuation">,</span>
        <span class="token literal-property property">map</span><span class="token operator">:</span> canvasTexture<span class="token punctuation">,</span> <span class="token comment">// 设置纹理贴图</span>
        <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">/* 材质透明 */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> plane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
    plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cardW <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> cardW <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    group<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    group<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plane<span class="token punctuation">)</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="坐标轴的一些描述" tabindex="-1"><a class="header-anchor" href="#坐标轴的一些描述" aria-hidden="true">#</a> 坐标轴的一些描述</h2><ul><li><p>AxesHelper( size : Number ) 模拟3个坐标轴 红色代表 X 轴. 绿色代表 Y 轴. 蓝色代表 Z 轴. size 代表轴的线段长度. 默认为 1</p></li><li><p>默认原点就在canvas的中心位置</p></li><li><p>如果导入的3D模型，其因为占用一定的长宽高 它的原心不一定和canvas的中心位置重合</p></li><li><p>坐标轴的各轴的走向会随摄像机的位置不同而不同</p></li><li><p>世界坐标系: 世界坐标系位于屏幕的中心(0,0,0),往右侧是x轴,往上是y轴,垂直屏幕朝向的是z轴.所以屏幕的左下角是(-1,-1),右上角是(1,1);</p></li><li><p>https://segmentfault.com/a/1190000010490845 世界坐标的计算推演过程</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mouse<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX <span class="token operator">/</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
mouse<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientY <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>屏幕坐标系: webgl会将三维的坐标经过计算,在屏幕里正常显示</li></ul><h2 id="mesh-网格" tabindex="-1"><a class="header-anchor" href="#mesh-网格" aria-hidden="true">#</a> Mesh 网格</h2><p>3D世界由点组成，两个点能组成一条直线，三个不在一条直线上的点，就能组成一个三角面，无数的三角面就能组成各种各样的物体，通常把这种网络模型叫做Mesh模型 Mesh(参数一：要用三角面创建的形状【一般的形状threejs已经提供】, 参数二：材质)</p><p>部分共有属性和方法参考 Object3D</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// xyz方向分别缩放倍数</span>
<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2.0</span> <span class="token comment">// x 方向放大2倍</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="摄像机" tabindex="-1"><a class="header-anchor" href="#摄像机" aria-hidden="true">#</a> 摄像机</h2><ul><li><p>先设置好相机位置.position(眼睛位置)，然后通过.lookAt()方法设置相机目标观察点</p></li><li><p>相机默认是由正z轴看像-z轴（相机镜头对着-z轴方向拍）</p></li><li><p>PerspectiveCamera ( fov : Number, aspect : Number, near : Number, far : Number ) fov(fieldOfView) — 摄像机视锥体垂直视野角度, 从视图的底部到顶部,默认值是50，越大视图越小; 参考https://www.ituring.com.cn/book/miniarticle/49446 aspect — 摄像机视锥体长宽比,通常是使用画布的宽/画布的高。默认值是1（正方形画布）; near — 摄像机视锥体近端面; far — 摄像机视锥体远端面</p></li></ul><p>透视相机， 这一投影模式被用来模拟人眼所看到的景象，它是3D场景的渲染中使用得最普遍的投影模式</p><h2 id="渲染器" tabindex="-1"><a class="header-anchor" href="#渲染器" aria-hidden="true">#</a> 渲染器</h2><ul><li>renderer = WebGLRenderer({ 配置项 }) 用 WebGL(一种3D渲染协议) 渲染出制作的场景</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// alpha - canvas是否包含alpha (透明度)。默认为 false  (rgba 的a同样的效果？)</span>
<span class="token comment">// antialias - 是否执行抗锯齿。默认为false.</span>
<span class="token comment">// renderer.shadowMap.enabled : Boolean 如果设置开启，允许在场景中使用阴影贴图。默认是 false。</span>
renderer<span class="token punctuation">.</span><span class="token function">setClearColor</span><span class="token punctuation">(</span><span class="token number">0x011339</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token comment">// 设置渲染器背景色</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="灯光" tabindex="-1"><a class="header-anchor" href="#灯光" aria-hidden="true">#</a> 灯光</h2><ul><li><p>SpotLight ( color : Integer, intensity : Float, distance : Float, angle : Radians, penumbra : Float, decay : Float ) 聚光灯 光线从一个点沿一个方向射出，随着光线照射的变远，光线圆锥体的尺寸也逐渐增大</p></li><li><p>HemisphereLight(skyColor : Integer, groundColor : Integer, intensity : Float) 半球光，光源直接放置于场景之上，光照颜色从天空光线颜色渐变到地面光线颜色。半球光不能投射阴影。 skyColor - (可选参数) 天空中发出光线的颜色。 缺省值 0xffffff。 groundColor - (可选参数) 地面发出光线的颜色。 缺省值 0xffffff。 intensity - (可选参数) 光照强度。 缺省值 1。</p></li><li><p>DirectionalLight( color : Integer, intensity : Float ) 平行光, 可以投射阴影 color - (可选参数) 16进制颜色。 缺省值为 0xffffff (白色)。 intensity - (可选参数) 光照的强度。缺省值为1</p></li><li><p>AmbientLight( color : Integer, intensity : Float )环境光会均匀的照亮场景中的所有物体 color - (参数可选）颜色的rgb数值。缺省值为 0xffffff intensity - (参数可选)光照的强度。缺省值为 1</p></li></ul><h2 id="控制" tabindex="-1"><a class="header-anchor" href="#控制" aria-hidden="true">#</a> 控制</h2><ul><li>OrbitControls( object : Camera, domElement : HTMLDOMElement ) 轨道控制器, 可以使得相机围绕目标进行轨道运动。 Camera 将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身 domElement: 用于事件监听的HTML元素。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span>
<span class="token comment">/* 你能够垂直旋转的角度的上限，范围是0到Math.PI，其默认值为Math.PI */</span>
controls<span class="token punctuation">.</span>maxPolarAngle <span class="token operator">=</span> <span class="token number">1</span>

controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    angelY <span class="token operator">=</span> controls<span class="token punctuation">.</span><span class="token function">getAzimuthalAngle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获得当前的水平旋转，单位为弧度</span>
    angelX <span class="token operator">=</span> controls<span class="token punctuation">.</span><span class="token function">getPolarAngle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获得当前的垂直旋转，单位为弧度</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// .saveState() // 保存当前控制器的状态。这一状态可在之后由.reset() 所恢复。</span>
<span class="token comment">// angelY = controls.getAzimuthalAngle() // 获得当前的水平旋转，单位为弧度</span>
<span class="token comment">// angelX = controls.getPolarAngle() // 获得当前的垂直旋转，单位为弧度</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="载入3d模型-加载器" tabindex="-1"><a class="header-anchor" href="#载入3d模型-加载器" aria-hidden="true">#</a> 载入3D模型 加载器</h2><p>官方文档 https://threejs.org/docs/index.html#manual/zh/introduction/Loading-3D-models</p><p>官方推荐使用glTF（gl传输格式）。.GLB和.GLTF是这种格式的这两种不同版本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;./x.gltf&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 遍历调用者和调用者的所有后代 */</span>
    gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            node<span class="token punctuation">.</span>material<span class="token punctuation">.</span>wireframe <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 材质显示线框模式</span>
            <span class="token comment">// node.material.color = new THREE.Color( 0x061D9D );  // 设置这个颜色没有用； 颜色要用 THREE.Color 创建实例</span>
            node<span class="token punctuation">.</span>material<span class="token punctuation">.</span>emissiveIntensity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 自发光强度</span>
            node<span class="token punctuation">.</span>material<span class="token punctuation">.</span>emissive <span class="token operator">=</span> node<span class="token punctuation">.</span>material<span class="token punctuation">.</span>color<span class="token punctuation">;</span> <span class="token comment">// 自发光 （MeshStandardMaterial 中）</span>
            <span class="token comment">// node.material.emissiveMap = node.material.map;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    gltf<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    gScene <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span>
    gScene<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    gScene<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    gScene<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    gScene<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> light <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    light<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span>
    light<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    gScene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>light<span class="token punctuation">)</span>  <span class="token comment">// 单独加灯光</span>

    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gScene<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="精灵-sprite" tabindex="-1"><a class="header-anchor" href="#精灵-sprite" aria-hidden="true">#</a> 精灵 Sprite</h1><p>一个总是面朝着摄像机的平面(该平面始终对着我们)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;xxx.png&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 这里加载的图片宽高比通过下面的 scale 设置,x=宽 y=高 即可</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SpriteMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">map</span><span class="token operator">:</span> map <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> sprite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Sprite</span><span class="token punctuation">(</span>material<span class="token punctuation">)</span>
sprite<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
sprite<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sprite<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> demo</h2>`,51),r={href:"https://codepen.io/Hewitt/pen/ZEWgNyg",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.bootcdn.net/ajax/libs/three.js/110/three.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 作为Three.js渲染器输出元素 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cusThree<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> windowW <span class="token operator">=</span> <span class="token number">500</span>
<span class="token keyword">var</span> windowH <span class="token operator">=</span> <span class="token number">500</span>
<span class="token keyword">var</span> camera <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> spotLight <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> plane <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> sphere <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> cube <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">// 创建场景</span>
<span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// scene.background = new THREE.Color(0xD1D1D1)</span>

<span class="token comment">// 创建渲染器</span>
<span class="token keyword">var</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>windowW<span class="token punctuation">,</span> windowH<span class="token punctuation">)</span>
renderer<span class="token punctuation">.</span>shadowMap<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token comment">/* 创建透视相机 */</span> 
<span class="token keyword">function</span> <span class="token function">createCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> windowW <span class="token operator">/</span> windowH<span class="token punctuation">,</span> <span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token comment">/* 设置相机的位置 */</span>
    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">40</span>
    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">50</span>
    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">30</span>

    <span class="token comment">/* 设置镜头的位置 */</span>
    camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>position<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 加入光源 */</span>
<span class="token keyword">function</span> <span class="token function">createSpotLight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    spotLight <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SpotLight</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    spotLight<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    spotLight<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span>
    spotLight<span class="token punctuation">.</span>shadow<span class="token punctuation">.</span>mapSize<span class="token punctuation">.</span>with <span class="token operator">=</span> <span class="token number">2048</span>
    spotLight<span class="token punctuation">.</span>shadow<span class="token punctuation">.</span>mapSize<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">2048</span>

    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>spotLight<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 创建平面 */</span>
<span class="token keyword">function</span> <span class="token function">createPlane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 着色器 */</span>
    <span class="token comment">/* 参数：宽 高 x方向分段 y方向分段 分段是对六个面进行分段 */</span>
    <span class="token keyword">var</span> planeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PlaneGeometry</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment">/* 材质 */</span>
    <span class="token keyword">var</span> planeMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshLambertMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xC1C1C1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    plane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>planeGeometry<span class="token punctuation">,</span> planeMaterial<span class="token punctuation">)</span>
    <span class="token comment">/* 打开阴影效果 */</span>
    plane<span class="token punctuation">.</span>receiveShadow <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token comment">/* 设置平面体的位置 */</span>
    plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span>
    plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span>
    plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">/* 可以用如下方式替代以上的方式 */</span>
    <span class="token comment">// plane.position.set(16,0,0)</span>

    <span class="token comment">/* 设置平面体的旋转 */</span>
    plane<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.6</span>
    plane<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.9</span>
    <span class="token comment">/* 将平面体加入到场景中 */</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plane<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 创建一个正方体 */</span>
<span class="token keyword">function</span> <span class="token function">createCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">/* 着色器 */</span>
    <span class="token keyword">var</span> cubeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>

    <span class="token comment">/* 材质 */</span>
    <span class="token keyword">var</span> cubeMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshLambertMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xA7A7A7</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>cubeGeometry<span class="token punctuation">,</span> cubeMaterial<span class="token punctuation">)</span>
    <span class="token comment">/* 打开阴影 */</span>
    cube<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token comment">/* 设置立方体的位置 */</span>
    cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>
    cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">10</span>
    cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token comment">/* 将立方体加入到场景 */</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 创建一个球面体 */</span>
<span class="token keyword">function</span> <span class="token function">createSphere</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> sphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span>

    <span class="token comment">/* 一个以简单着色（平面或线框）方式来绘制几何体的材质 */</span>
    <span class="token keyword">var</span> sphereMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xA7A7A7</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">/* 生成球面体 */</span>
    sphere <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> sphereMaterial<span class="token punctuation">)</span>
    
    <span class="token comment">/* 打开阴影效果 */</span>
    sphere<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token comment">/* 设置球面体的位置 */</span>
    sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span>
    sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">10</span>
    sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">5</span>

    <span class="token comment">/* 将球面体加入到场景中 */</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#cusThree&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// cube.rotation.x += 0.01</span>
    <span class="token comment">// cube.rotation.y += 0.01</span>
    cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>z <span class="token operator">+=</span> <span class="token number">0.01</span>
    
    plane<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>z <span class="token operator">+=</span> <span class="token number">0.01</span>

    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">+=</span> <span class="token number">0.01</span>
    
    <span class="token comment">// requestAnimationFrame(render)</span>
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">createPlane</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">createCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">createSphere</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">createCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">createSpotLight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function d(m,v){const a=e("ExternalLinkIcon");return t(),o("div",null,[u,n("p",null,[n("a",r,[c("在线示例"),l(a)])]),k])}const h=p(i,[["render",d],["__file","threeJs.html.vue"]]);export{h as default};

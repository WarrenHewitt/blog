import{_ as d,M as i,p as r,q as p,R as n,N as e,V as l,t as s,a1 as o}from"./framework-7e1a102e.js";const c={},u={class:"table-of-contents"},m=o(`<p>[toc]</p><h2 id="sql" tabindex="-1"><a class="header-anchor" href="#sql" aria-hidden="true">#</a> sql</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>base_equipment_component_spare<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> equipment_id<span class="token operator">=</span><span class="token number">1506872389953138690</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 在设置时间项时，设置默认值可以填写 CURRENT_TIMESTAMP</span>

<span class="token comment">## 查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> company<span class="token punctuation">;</span>

<span class="token comment">## 获取 uuid</span>
<span class="token keyword">SELECT</span> UUID<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## 求和</span>
<span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span> company

<span class="token comment">## 添加 income 有的字段加反引号的原因是与保留字段冲突</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> income <span class="token punctuation">(</span>id<span class="token punctuation">,</span> product<span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>change<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> total<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;12e12e1&#39;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">## 删除数据</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> income <span class="token keyword">WHERE</span> id<span class="token operator">=</span><span class="token string">&#39;12e1e1&#39;</span>

<span class="token comment">## 删除所有数据</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> income 

<span class="token comment">## 删除所有数据 不计入日志 不可恢复</span>
<span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> income

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库基础知识" tabindex="-1"><a class="header-anchor" href="#数据库基础知识" aria-hidden="true">#</a> 数据库基础知识</h2><ul><li><p>平衡树：主流的RDBMS都是把平衡树当做数据表默认的索引数据结构</p></li><li><p>有无主键 没有主键的表，数据无序的放置在磁盘存储器上，一行一行的排列的很整齐。 有主键，「表」的数据格式转换成「索引（平衡树）」的格式放置，变成了一个<strong>聚集索引</strong></p></li><li><p>建一个新索引， 字段中的数据就会被复制一份出来， 用于生成索引。会增加表的体积， 占用磁盘存储空间。</p></li><li><p>非聚集索引， 即常规索引，采用平衡树作为索引的数据结构,每个索引互相之间不存在关联</p></li><li><p>通过聚集索引可以查到需要查找的数据， 而通过非聚集索引可以查到记录对应的主键值 ， 再使用主键的值通过聚集索引查找到需要的数据</p></li></ul><h2 id="mongo" tabindex="-1"><a class="header-anchor" href="#mongo" aria-hidden="true">#</a> Mongo</h2><h3 id="报错信息" tabindex="-1"><a class="header-anchor" href="#报错信息" aria-hidden="true">#</a> 报错信息</h3><ul><li>发生系统错误 5。 ：请使用管理员权限</li></ul><h3 id="安装-mongodb" tabindex="-1"><a class="header-anchor" href="#安装-mongodb" aria-hidden="true">#</a> 安装 mongoDB</h3><p>如下方法写于（版本v3.4.6）</p><p>https://docs.mongodb.com/manual/tutorial/install-mongodb-enterprise-on-windows/</p>`,12),v={href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,[n("p",null,"将安装的bin目录（默认一般在C:\\Program Files\\MongoDB\\Server\\3.4）添加到环境变量即可在任意目录打开命令行执行mongo命令")],-1),b=n("li",null,[n("p",null,'安装为Windows服务，使用命令：mongod --config F:\\mongodb\\mongo.config --install --serviceName "any name" 当前版本已经自带了MongoDB服务')],-1),g=n("li",null,[n("p",null,"启动服务 net start/stop name（管理员权限） 删除用 sc delete name")],-1),k=n("li",null,[n("p",null,"新版安装好后会默认安装 mongoDBCompass 可以作为简单的 GUI 操作数据库")],-1),y=o(`<p>启动mongod服务：<br> bin目录下执行&#39;mongod&#39;即可（当已经创建了将MongoDB服务器作为Windows服务运行时就可用上面的命令:net...）</p><ul><li>进入目录bin中然后执行mongo.exe||mongo (在powershell中用 <strong>.\\mongo.exe</strong>)</li><li>然后进入mongodb shell（是mongodb自带的交互式JavaScript shell）用来是对mongodb 的后台进行操作和管理。</li><li>当你进入mongodb后台后，默认链接到test文档（数据库）</li></ul><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h3><hr><p>创建数据库 use databaseName(如果数据库不存在就创建，存在就切换到指定数据库)。<br> 删除数据库 db.dropDatabase();//先进入数据库</p><p>show dbs 查看所有数据库</p><p>db 显示当前数据库名</p><p>db.dropDatabase() 删除数据库：（先进入数据库）</p><p>show collections（集合，收集）查看数据库中有哪些表：（先进数据库）</p><p>db.createCollection(表名)||或者直接添加数据时会自动创建表 创建表</p><p>db.表名.drop() //先进入数据库 删除表</p><hr><p>添加数据：<br> db(固定).任意名称.insert({键值对})||用数组[{}，{}]批量插入</p><hr><p>查看数据：<br> db.表名.find()//查看所有数据 findOne(query, options, callback)<br> options:fields(fields to include{a:1} or exclude{a:0} )</p><hr><p>更改字段值//只修改搜到的第一个<br> db.表名.update({&quot;条件字段名&quot;:&quot;字段值&quot;},{$set:{&quot;要修改的字段名&quot;:&quot;修改后的字段值&quot;}});</p><hr><p>删除数据<br> db.表名.remove({键值对})//当不加参数时就直接删除表中所有数据(name:’hew’||’name’:’hew’)</p><h3 id="node调用" tabindex="-1"><a class="header-anchor" href="#node调用" aria-hidden="true">#</a> node调用</h3><p>有两种驱动 MongoDB Driver 和 Mongoose</p><ul><li>mongodb driver 参考 node-koa/graphql</li><li>mongoose 参考 node-egg/ 它是针对mongoDB操作的一个对象模型库，封装了mongoDB对文档的一些增删改查等常用方法，让nodejs操作mongoDB数据库变得更加容易</li></ul><p>mongodb 增删盖查数据库很自由，插入数据时传入 json 数据就可以了，而没有对 json 格式进行约束。无法保证存在数据库里的数据都是同样的格式。</p><p>mongoose 为 mongodb 提供了一种直接的，基于 scheme 结构去定义你的数据模型。它内置数据验证，查询构建，业务逻辑钩子等，开箱即用。有表的概念</p><h3 id="studio3t" tabindex="-1"><a class="header-anchor" href="#studio3t" aria-hidden="true">#</a> studio3t</h3><p>robo 3t 的收费版</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-mymongo localhost:27017 数据库地址
	|-mydatabase 数据库名称
		|- Collections 集合(表)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mongoose 参考 node-egg/</li></ul><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><ul><li>navicat 设置自增 用 int 类型 勾选 auto increment 设置主键</li></ul><hr><p>报错： Cannot enqueue Handshake after invoking quit</p><p>数据库的链接对象是挂掉后无法重连，而且数据库的链接次数有限；重新打开数据库链接比数据库操作消耗更多</p><p>网页伺服较少情况可以一次链接后不再断开</p><hr><p>查看安装路径：在mysql command line client 中输入 show variables like &quot;%char%&quot;</p><p>执行mysql命令后面注意加分号</p><p>在powershell 下执行命令注意是否要加 ./ 当前目录</p><ul><li>从8.0.17版本开始，TINYINT, SMALLINT, MEDIUMINT, INT, and BIGINT类型的显示宽度将失效，zerofill补零操作也废弃了；原来int(4)这种形式 实际也只是做标记使用，真实的可存储数据长度是根据类型来的，参考 https://dev.mysql.com/doc/refman/8.0/en/integer-types.html</li></ul><h3 id="用installer-msi-安装" tabindex="-1"><a class="header-anchor" href="#用installer-msi-安装" aria-hidden="true">#</a> 用installer msi 安装</h3><p>直接下载 社区版 msi 安装包 https://dev.mysql.com/downloads/installer/</p><p>一直默认安装即可</p><hr><ol><li>下载 installer 带 web 的版本表示安装时需要联网 https://dev.mysql.com/downloads/installer/</li><li>MySQL Community Server 社区版本，开源免费，但不提供官方技术支持</li><li>MySQL Workbench（GUI TOOL）一款专为MySQL设计的ER/数据库建模工具</li><li>check requirements 选择 Execute</li><li>一直默认 只安装server</li><li>product configuration 可以不填</li><li>Root Password mysql123456; tcp/ip port 3306 X Protocol Port 33060</li></ol><ul><li><p>没有my.init文件，可以在C:\\ProgramData\\MySQL\\MySQL Server 8.0中拷贝一份</p></li><li><p>报错</p></li></ul><ol><li>Client does not support authentication protocol requested by server; consider upgrading MySQL client</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 处理方式为 执行如下命令</span>
ALTER <span class="token environment constant">USER</span> <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED WITH mysql_native_password BY <span class="token string">&#39;对应用户的密码&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zip-安装" tabindex="-1"><a class="header-anchor" href="#zip-安装" aria-hidden="true">#</a> zip 安装</h3><ul><li><p>将解压后的文件放到任意目录，可改名</p></li><li><p>将\\bin 添加到环境变量中（this PC &gt; properties &gt; advanced system settings）</p></li><li><p>bin的同级目录 创建my.ini文件</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[mysqld]

 ## 设置mysql客户端默认字符集
default-character-set=utf8 
[mysqld]
#设置3306端口
port = 6767 
## 设置mysql的安装目录
basedir=C:\\Program Files\\mysql

## 设置mysql数据库的数据的存放目录

datadir=C:\\Program Files\\mysql\\data

## 允许最大连接数
max_connections=200
## 服务端使用的字符集默认为UTF8
character-set-server=utf8
## 创建新表时将使用的默认存储引擎
default-storage-engine=INNODB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意用 mysqld --console 查看错误</p><ol><li>mysqld --romve //删除mysql服务</li><li>mysqld --install //安装mysql服务</li><li>mysqld --initialize //一定要初始化</li><li>net start mysql</li></ol><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><p>创建或修改表的时候，注意表中是否有数据</p><h2 id="navicat-安装" tabindex="-1"><a class="header-anchor" href="#navicat-安装" aria-hidden="true">#</a> navicat 安装</h2><p>参考： https://learnku.com/articles/67706</p>`,56);function q(_,f){const a=i("router-link"),t=i("ExternalLinkIcon");return r(),p("div",null,[n("nav",u,[n("ul",null,[n("li",null,[e(a,{to:"#sql"},{default:l(()=>[s("sql")]),_:1})]),n("li",null,[e(a,{to:"#数据库基础知识"},{default:l(()=>[s("数据库基础知识")]),_:1})]),n("li",null,[e(a,{to:"#mongo"},{default:l(()=>[s("Mongo")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#报错信息"},{default:l(()=>[s("报错信息")]),_:1})]),n("li",null,[e(a,{to:"#安装-mongodb"},{default:l(()=>[s("安装 mongoDB")]),_:1})]),n("li",null,[e(a,{to:"#操作"},{default:l(()=>[s("操作")]),_:1})]),n("li",null,[e(a,{to:"#node调用"},{default:l(()=>[s("node调用")]),_:1})]),n("li",null,[e(a,{to:"#studio3t"},{default:l(()=>[s("studio3t")]),_:1})])])]),n("li",null,[e(a,{to:"#mysql"},{default:l(()=>[s("MySQL")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#用installer-msi-安装"},{default:l(()=>[s("用installer msi 安装")]),_:1})]),n("li",null,[e(a,{to:"#zip-安装"},{default:l(()=>[s("zip 安装")]),_:1})]),n("li",null,[e(a,{to:"#使用"},{default:l(()=>[s("使用")]),_:1})])])]),n("li",null,[e(a,{to:"#navicat-安装"},{default:l(()=>[s("navicat 安装")]),_:1})])])]),m,n("ol",null,[n("li",null,[n("p",null,[s("官网下载安装"),n("a",v,[s("https://www.mongodb.com/"),e(t)])])]),h,b,g,k]),y])}const x=d(c,[["render",q],["__file","mysqlMongo.html.vue"]]);export{x as default};

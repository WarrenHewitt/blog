import{_ as c,M as o,p as i,q as u,R as n,N as s,V as p,t as a,a1 as e}from"./framework-7e1a102e.js";const r={},d={class:"table-of-contents"},k=e(`<p>[toc]</p><ul><li>检测媒体 @media 后可用的查询 <code>window.matchMedia(&#39;print&#39;).addListener((res) =&gt; {});</code></li></ul><h3 id="浏览器解析文档过程" tabindex="-1"><a class="header-anchor" href="#浏览器解析文档过程" aria-hidden="true">#</a> 浏览器解析文档过程</h3><ol><li>解析html文档，构建DOM树（遇到img标签就加载资源）</li><li>加载样式，解析样式，构建样式规则树</li><li>加载js，执行js代码</li><li>把DOM树与样式树匹配构建渲染树（加载背景tupian）</li><li>计算元素位置进行布局</li><li>渲染绘制</li></ol><p>DOM树里包含了所有HTML标签，包括display:none隐藏，还有用JS动态添加的元素等</p><p>render tree不包含隐藏的节点 (比如display:none的节点，还有head节点)，因为这些节点不会用于呈现，而且不会影响呈现的，所以就不会包含到 render tree中</p><p>重绘：render tree中的一些元素需要更新属性，而这些属性只是影响元素的外观，风格，而不会影响布局的，比如background-color</p><p>回流：render tree中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建</p><hr><h3 id="input-标签相关操作" tabindex="-1"><a class="header-anchor" href="#input-标签相关操作" aria-hidden="true">#</a> input 标签相关操作：</h3><p>disabled=&#39;disabled&#39; 可用于option标签和input标签</p><p>readonly=&#39;readonly&#39;用于input标签，不能修改的。仍然可以使用 tab 键切换到该字段，还可以选中或拷贝其文本。</p><p>input 标签设置属性 autofocus 自动获取焦点</p><p>inputElement.focus()</p><p>checked 在标签上只要出现就会被勾选，如果是用js代码设置 checked 的值为 true 或 false 即正常;获取也用checked</p><p>enterkeyhint 属性可用于修改 手机键盘 enter 按钮的文字</p><p>form 和 input 等，可以设置 autocomplete 解决 背景 问题</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 常规输入框用这个即可 */</span>
<span class="token selector">input:-webkit-autofill</span> <span class="token punctuation">{</span>
    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span>0 0 0px 1000px #fff inset<span class="token punctuation">;</span>
    <span class="token property">-webkit-text-fill-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token selector">input:-internal-autofill-previewed,
input:-internal-autofill-selected</span> <span class="token punctuation">{</span>
    <span class="token property">-webkit-text-fill-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span> <span class="token comment">/* 选中时的颜色 */</span>
    <span class="token property">transition</span><span class="token punctuation">:</span> background-color 50000s ease-out 10000s<span class="token punctuation">;</span> <span class="token comment">/* 时间设置一定要长 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者设置如下属性 <code>autocomplete=&quot;off&quot;</code> 关闭自动填充 <code>autocomplete=&quot;new-password&quot;</code> 阻止密码字段的自动填充</p><hr><p>p 标签中不能放块级元素,内联元素中不能放块级元素;</p><hr><p>是用 img 来加载图片还是用背景图片：</p><ol><li>页面会先加载img图片，若图片大会影响后面的内容的加载</li><li>如果用背景来加载图片的话，就不会影响到页面的显示效果</li><li>图片比较重要且资源小就用img</li><li>alt属性有利于seo（搜索引擎优化）；更好的有利于seo用a标签加css的背景；</li></ol><hr><p>&amp;nbsp占位符</p><h2 id="标签" tabindex="-1"><a class="header-anchor" href="#标签" aria-hidden="true">#</a> 标签</h2><p>HTML Entity 实体是一段以连字号（&amp;）开头、以分号（;）结尾的文本（字符串）。</p><ul><li>a</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>download: 添加该属性表示下载 href 内容而非导航，其值是下载文件的名称 
href: 可以是 http开头的地址也可以是  blob: URL(URL.createObjectURL创建) 或 data: URL(base64 的 URL) , tel: URLs, mailto URLs  等
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li><p>table</p></li><li><p>重置 table border(注意某些用到了单元合并的行可能会出现重复，要单独处理)</p></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>时间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2015<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>详情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">table</span><span class="token punctuation">{</span> <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">th</span><span class="token punctuation">{</span> <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">tr:first-child td</span><span class="token punctuation">{</span><span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">td</span><span class="token punctuation">{</span><span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">}</span>
<span class="token selector">td:first-child, th:first-child</span><span class="token punctuation">{</span><span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">th:last-child</span><span class="token punctuation">{</span> <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">tbody</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">thead, tbody tr</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>
    <span class="token property">table-layout</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>属性:
colspan= 2  占多少列；
rowspan=2  占多少行；
align=left；   
cellspacing=&quot;0&quot;：两个单元格之间空间的大小；
cellpadding=&quot;0&quot;：单元的内容和边框之间的空间； 
border=&quot;1px&quot;

样式：
border-collapse: collapse; 去掉 table 中边框间间隔，合并边框
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;colgroup&gt;</code> 标签用于对表格中的列进行组合，以便对其进行格式化，样式设计。table内，caption元素之后,thead之前（https://www.runoob.com/try/try.php?filename=tryhtml_colgroup_test）</p><p>可以利用该标签，设置可拖动表格宽度</p><hr><p><code>&lt;abbr title=&#39;people&#39;s republic of china&#39;&gt;PRC&lt;/abbr&gt;</code></p><p>为浏览器拼写和检查和搜索引擎提供有用的信息。新增的结构标签：（由DIV派生出来）</p><p>section:页面中的一个内容区块（不用来布局，只用来划分网页）</p><p>article：定义页面独立的区域</p><p>aside：侧边栏内容</p><p>hgroup：对网页或是区块（section）的标题进行整合</p><p>footer：定义section或是文档的页脚</p><p>nav：导航</p><p>figure：独立的流内容，图片等</p><p>mark:标记</p><p>progress：进度条（支持性不好）</p><p>time：定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的。它的标注是给搜索引擎用的，方便搜索引擎生成更智能的的搜索结果。</p><p>(属性datetime=&#39;2013-10-18T09：00Z&#39;，pubdate 告诉搜索引擎这是该文档或是文章的创建时间。)</p><p>T是分隔符Z表示UTC格式；</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 以树形结构显示 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>总结<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>kkk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>myCar<span class="token punctuation">&#39;</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>car<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!-- 用于输入时，提示预先存储的值。 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>car<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>12<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;pre&gt;&lt;/pre&gt;</code>: 定义预格式化的文本（保留文本中的空格和换行符）和 <code>white-space:pre</code> 类似；通常用来包含代码</p><hr><p>video 和 audio</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>320<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>240<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>movie.mp4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video/mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>movie.ogg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video/ogg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    您的浏览器不支持 video 标签。
    <span class="token comment">&lt;!-- Ogg、MPEG4、WebM --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>timeupdate</code> 事件在音频/视频（audio/video）的播放位置发生改变时触发</li><li><code>play</code> 事件在音频/视频（audio/video）点击播放时时触发</li><li>设置播放时间点 document.getElementById(&quot;xxx&quot;).currentTime = 5;</li></ul><p>label</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Do you like peas? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 包含 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 利用 for 和 id 结合 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">manifest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&#39;</span>XX X.X X X<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> 缓存网页

<span class="token comment">&lt;!-- 
    rel=&#39;shortcut icon&#39; 是历史标准 不应该使用了 
    图像通常可以使用任何被浏览器支持的图像格式
    type:gif,png,ico(image/vnd.microsoft.icon)
    favicon.ico类型的图标所有桌面浏览器都支持，推荐把16×16, 32×32 以及 48×48这几个尺寸的图标整合在favicon.ico中
    现代桌面浏览器，推荐使用PNG图标作为favicon
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>icon<span class="token punctuation">&#39;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>images/png<span class="token punctuation">&#39;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>images/delete.png<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 防止页面 默认去获取 icon --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data:image/png;base64,<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>dns-prefetch<span class="token punctuation">&#39;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>//g.tbcdn.cn<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS的解析

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&#39;</span>http ://www.w3school.com.cn/i/<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>_blank<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
会在所有的URL（img link a...）前面加上base的href内容，并且跳转方式会用base的target值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>列表</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 描述说明性质的列表 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>Name 类似标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>Warren 这里会缩进<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 属性 type = 1，a，A，i，I 显示的序号类型--&gt;</span>
<span class="token comment">&lt;!-- 属性 start = 2 表示从2开始 --&gt;</span>
<span class="token comment">&lt;!-- 属性 reversed = true 表示是否反序显示 --&gt;</span>
<span class="token comment">&lt;!-- li 中的 value 属性 重新定义序号的值 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">reversed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">start</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>5<span class="token punctuation">&#39;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>I<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><code>&lt;input type=&#39;file&#39; multiple(多选文件)/&gt;</code> 获取元素的files属性则是一个FileList对象， 该对象是一个类数组对象，一个file对象就是一个Blob。有name，type，size（files[0].name）是火狐的标准+谷歌也可以。 size 是大小乘以 1024 比如不超过 <code>10M =&gt; 10*1024*1024</code> 当没有加multiple时 只有一个文件也是用files[0]来获取, change事件用 <code>e.target.files</code></p><p>Filereader对象，图片预览等</p><p>返回的值在 r.target.result中</p><p>accept: MIME类型，多个之间用逗号隔开 <code>accept=&quot;audio/*,video/*,image/*&quot;</code></p><hr><p>全局属性：</p><p>data-*：自定义属性;</p><p>hidden=&#39;hidden&#39;隐藏元素;</p><p>spellcheck=&#39;true/false&#39;检查有无拼写错误；</p><p>tableindex=&#39;1&#39;设置按tab键的时候跳转顺序；</p><p>contentEditable=true用contentEditable来让元素的内容可以编辑，还提供了一个javascript方法，window.document.designMode=&#39;on/off&#39;让所有的内容是否可以修改。react 开发环境会包warring</p><h2 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> meta</h2><p><strong>全屏</strong><code>&lt; meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; &gt; </code></p><p>如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。</p><p>兼容性： iOS 2.1 +</p><p><code>&lt; meta name=&#39;apple-mobile-web-app-status-bar-style&#39; content=&#39;blank&#39;&gt;</code></p><p>除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。</p><p>如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值default。</p><p>兼容性:iOS 2.1 +</p><hr><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>Pragma<span class="token punctuation">&#39;</span></span><span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>no-cache<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>禁止浏览器从本地计算机的缓存中访问该页面
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 大小写都可以
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>refresh<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3;url=&#39;http://ww.baidu.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1 user-scalable=no, minimum-scale=1, maximum-scale=1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>X-UA-Compatible<span class="token punctuation">&#39;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>IE=edge,chrome=1<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>  
IE=edge告诉IE使用最新的引擎渲染网页，chrome=1则可以激活Chrome Frame ；
所以使用X-UA-Compatible标签强制IE8采用低版本方式渲染。 有些因素会自动触发兼容性文档视图，这个时候设置X-UA-Compatible就可以防止这个自动触发的行为。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="embed" tabindex="-1"><a class="header-anchor" href="#embed" aria-hidden="true">#</a> embed</h2><p>AllowScriptAccess:naver/aways 参数可以防止从一个域中承载的 SWF文件访问来自另一个域的 HTML页面中的脚本。</p><p>allowNetworking:</p><p>all: SWF 文件中允许使用所有网络API;</p><p>internal: SWF 文件可能不调用浏览器导航或浏览器交互API，但是它会调用任何其它网络API.</p><p>none: SWF 文件可能不调用浏览器导航或浏览器交互API，并且它无法使用任何SWF 到 SWF 通信 API</p><h2 id="与-dom-操作相关" tabindex="-1"><a class="header-anchor" href="#与-dom-操作相关" aria-hidden="true">#</a> 与 dom 操作相关</h2>`,97),m={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>以下接口都从 Node 继承其方法和属性：</p><p>Document, Element, Attr, CharacterData (which Text, Comment, and CDATASection inherit), ProcessingInstruction, DocumentFragment, DocumentType, Notation, Entit</p><p>htmlElement 继承自父接口Element和 GlobalEventHandlers的属性</p><hr><p>htmlElement.dataset.name = &#39;hew&#39; 给元素添加自定义属性 data-name=&quot;hew&quot;</p><ul><li>元素的插入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>parentElement<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>Element<span class="token punctuation">,</span> 在父元素中的某个子元素<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 在元素插入到指定元素前面</span>

Element<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>Element<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 在元素内部最后插入元素</span>

ParentNode<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>Node<span class="token punctuation">,</span>DOMString<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 在元素内部第一个元素前插入节点 IE不支持所以建议用 insertBefore 替代</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>parentNode<span class="token punctuation">.</span>prepend<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parentNode<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>Element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> firstNode <span class="token operator">=</span> parentNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>Element<span class="token punctuation">,</span> firstNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li><p><code>node.nodeType</code> 1 元素节点 2属性节点(被废弃) 3文本节点</p></li><li><p><code>node.parentElement</code> 返回当前节点的父元素节点</p></li><li><p><code>node.parentNode</code> 指定节点的父节点 返回值可能是一个元素(Element )节点,也可能是一个文档(Document )节点,或者是个文档碎片(DocumentFragment)节点</p></li></ul><hr>`,10),g=n("code",null,"Element.animate",-1),b={href:"https://codepen.io/Hewitt/pen/ymJoRr",target:"_blank",rel:"noopener noreferrer"},h=e(`<hr><ul><li>移除元素 <code>node.parentNode.removeChild(node)</code> 兼容性好</li></ul><hr><ul><li><p><code>document.querySelector(&#39;#id&#39;).cloneNode(true)</code> true表示子节点也clone，返回新 Node</p></li><li><p>获取原始图片的真实宽高，非css样式修改后的宽高</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 注意是要在 onload 加载后才能调用</span>
<span class="token keyword">var</span> width <span class="token operator">=</span> htmlImageElement<span class="token punctuation">.</span>naturalWidth  
<span class="token keyword">var</span> height <span class="token operator">=</span> htmlImageElement<span class="token punctuation">.</span>naturalHeight
<span class="token comment">// htmlImageElement 可以是 document.querySelector 等类似方法获取的 img 元素 也可以是 new Image() 创建的元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素宽高-与滑动条" tabindex="-1"><a class="header-anchor" href="#元素宽高-与滑动条" aria-hidden="true">#</a> 元素宽高,与滑动条</h3><ul><li><p>获取 img 标签宽高：<code>htmlImageElement.width | height</code> htmlImageElement 提供了特别的属性和方法</p></li><li><p>window.innerWidth | innerHeight 只能通过window调用获取当前显示区域宽高，如果是在iframe中则获取当前所在iframe的显示区域宽高 (都兼容)</p></li><li><p>htmlElement.clientWidth | clientHeight 包括内边距（兼容性好）</p></li><li><p>htmlElement.offsetWidth | offsetHeight 包括内边距和边框的宽度</p></li><li><p>返回元素相对于父元素的位置，element.offsetLeft 和 offsetTop，用了position更精确。</p></li><li><p>window.screen.width 获取电脑屏幕宽度 (兼容ie10，有问题)</p></li><li><p>htmlElement.scrollHeight 所有内容包括未被滚动到的 没有滚动条时 scrollHeight 和 clientHeight 相同</p></li><li><p>js原生，让元素滚动到可见区域</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>element<span class="token punctuation">.</span><span class="token function">scrollIntoView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">&quot;smooth&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>element.scrollLeft/scrollTop 来设置或获取滑动条的位置; 只能作用于元素上，window上无效</p></li><li><p>pageXOffset(scrollX)/pageYOffset(scrollY) 只能作用于 window 上, 推荐 pageXOffset，兼容ie9；只读属性</p></li><li><p>谷歌的页面滚动是用的body，火狐是用的html；</p></li><li><p>谷歌:当 scrollTop 的值小于1时会直接返回0，所以用y=1除以a的x次方指数函数来趋近0来由快到慢的滑动。</p></li><li><p>window.scroll() 和 window.scrollTo() 用法一致 参数为两种形式（1）配置对象 （2）(x,y) 值</p></li><li><p><code>Element.getBoundingClientRect()</code> 元素的大小及其相对于视口的位置(当页面滑动后，值会更改) 兼容良好</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>x: 推荐用left
y: 推荐用top
top: 距视口顶部距离
left: 距视口左边距离
width: 元素宽度
height: 元素高度
right: 元素右边距离视口左边的距离
bottom: 元素底部距离视口顶部的距离
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="queryselector" tabindex="-1"><a class="header-anchor" href="#queryselector" aria-hidden="true">#</a> querySelector</h2><ul><li>注意选择符中的 <code># .</code> 关键字 会被识别未 id、 类 querySelectorAll 返回的是 Static Node List(是一次对文档的快照，若是该快照下对文档有什么更改不会影响本次操作);<br> document.querySelectorAll(&#39;选择符&#39;)：返回匹配元素集合。<br> document.querySelector (&#39;选择符&#39;)：返回匹配第一个元素。<br> 而 getElementsBy 系列的返回的是 Live Node List：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
    lis <span class="token operator">=</span> ul<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//这里就是lis.length在一直变化  </span>
    ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每一次调用lis都会去遍历一下文档，最终会无限循环。</p><ul><li><p>相同： HTMLCollection 和 NodeList 十分相似，都是一个动态的元素集合，每次访问都需要重新对文档进行查询。</p></li><li><p>不同： HTMLCollection 是属于 Document Object Model HTML 规范，而 NodeList 属于 Document Object Model Core 规范。 所以在现代浏览器中，querySelectorAll 的返回值是一个静态的 NodeList(包含：entries forEach item keys length) 对象 而 getElementsBy 系列的返回值实际上是一个 HTMLCollection (包含 item length nameItem) 对象</p></li><li><p>NodeList 高版本浏览器可以用 forEach</p></li></ul><hr><h3 id="iframe" tabindex="-1"><a class="header-anchor" href="#iframe" aria-hidden="true">#</a> iframe</h3><ul><li><p>window.parent 当使用了多个 .parent 超出了实际层级，会返回最后一个层级，不会报错</p></li><li><p>全局作用域下打印 length <code>console.log(length);</code> 不会报 is not defined 会返回 iframe 的个数</p></li><li><p>子页面获取父窗口及其元素 <code>window.parent.document.getElementById()</code> 在chrome中window.parent.document 要在服务器上才能使用。</p></li><li><p>获取当前的内嵌页面url,就直接在该页面使用window.location.href即可</p></li><li><p>父页面查找子页面的元素：</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 跨域会有问题</span>
<span class="token comment">// 注意要放入 onload 中  等待子页面加载完成才能获取</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;iframeId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span><span class="token punctuation">[</span>document<span class="token operator">||</span>document<span class="token punctuation">.</span>body<span class="token operator">||</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;子页面ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>不同域可以在两个页面都设置document.domain=&#39;主域名&#39;</p></li><li><p>父子窗口传递消息</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 父窗口</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;iframeId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span><span class="token function">postmessage</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 子窗口iframe中使用</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span>data<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>允许子页面 video 全屏 设置 <code>allowfullscreen</code></li></ul><h4 id="http-请求返回完整的-html-怎么预览" tabindex="-1"><a class="header-anchor" href="#http-请求返回完整的-html-怎么预览" aria-hidden="true">#</a> http 请求返回完整的 html 怎么预览</h4><p>将html注入到 localStorage</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* page1 */</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;displayHtmlText&#39;</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;displayHtmlText&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;这是一个后端返回的完整html文件字符串&#39;</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;page2&#39;</span><span class="token punctuation">)</span>

<span class="token comment">/* page2 */</span>
<span class="token comment">// 在打开页面将 localStorage 中的html显示出来</span>
<span class="token comment">// 打开一个文档，以便写入数据 </span>
document<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 写入文档内容</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;preview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 关闭文档</span>
document<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="html5-消息通知" tabindex="-1"><a class="header-anchor" href="#html5-消息通知" aria-hidden="true">#</a> Html5 消息通知</h2><p>Notification（首字母大写） 或 刷新title</p><p>谷歌测试时,要启用本地服务的方式</p><p>Notification.requestPermission(function(permission){}),方法要用onclick等用户操作方法来调用。</p><p>在手机上只有火狐的实现了</p><h2 id="预览pdf" tabindex="-1"><a class="header-anchor" href="#预览pdf" aria-hidden="true">#</a> 预览pdf</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 方式一 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./pdf.pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>application/pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">internalinstanceid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>81<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            
<span class="token comment">&lt;!-- 方式二 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./pdf.pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    当前浏览器不支持在线预览PDF，请<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./pdf.pdf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>下载 PDF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>


<span class="token comment">&lt;!-- 方式三 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./pdf.pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>application/pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    当前浏览器不支持在线预览PDF，请<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./pdf.pdf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>下载 PDF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function f(q,y){const t=o("router-link"),l=o("ExternalLinkIcon");return i(),u("div",null,[n("nav",d,[n("ul",null,[n("li",null,[s(t,{to:"#浏览器解析文档过程"},{default:p(()=>[a("浏览器解析文档过程")]),_:1})]),n("li",null,[s(t,{to:"#input-标签相关操作"},{default:p(()=>[a("input 标签相关操作：")]),_:1})]),n("li",null,[s(t,{to:"#标签"},{default:p(()=>[a("标签")]),_:1})]),n("li",null,[s(t,{to:"#属性"},{default:p(()=>[a("属性")]),_:1})]),n("li",null,[s(t,{to:"#meta"},{default:p(()=>[a("meta")]),_:1})]),n("li",null,[s(t,{to:"#embed"},{default:p(()=>[a("embed")]),_:1})]),n("li",null,[s(t,{to:"#与-dom-操作相关"},{default:p(()=>[a("与 dom 操作相关")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#元素宽高-与滑动条"},{default:p(()=>[a("元素宽高,与滑动条")]),_:1})])])]),n("li",null,[s(t,{to:"#queryselector"},{default:p(()=>[a("querySelector")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#iframe"},{default:p(()=>[a("iframe")]),_:1})])])]),n("li",null,[s(t,{to:"#html5-消息通知"},{default:p(()=>[a("Html5 消息通知")]),_:1})]),n("li",null,[s(t,{to:"#预览pdf"},{default:p(()=>[a("预览pdf")]),_:1})])])]),k,n("p",null,[n("a",m,[a("MDN DOM"),s(l)])]),v,n("ul",null,[n("li",null,[a("元素的动画 "),g,a(" 参考 "),n("a",b,[a("骰子"),s(l)])])]),h])}const x=c(r,[["render",f],["__file","html.html.vue"]]);export{x as default};

import{_ as c,M as e,p as l,q as i,R as n,N as a,V as p,t as s,a1 as u}from"./framework-7e1a102e.js";const k={},r={class:"table-of-contents"},d=u(`<p>[toc]</p><h2 id="导出excel、pdf和下载文件" tabindex="-1"><a class="header-anchor" href="#导出excel、pdf和下载文件" aria-hidden="true">#</a> 导出Excel、PDF和下载文件</h2><blockquote><p>创建时间： 2020-03-16；测试：chrome v80.0.3987.122 正常 更新：2021-05-26</p></blockquote><h3 id="导出-excel-利用xlsx插件" tabindex="-1"><a class="header-anchor" href="#导出-excel-利用xlsx插件" aria-hidden="true">#</a> 导出 Excel （利用xlsx插件）</h3><ul><li>安装 xlsx 引入包 <code>import XLSX from &#39;xlsx/dist/xlsx.mini.min.js&#39;;</code></li></ul><p>实现原理：将其描述表格的 JSON 按照电子表格的协议转换为压缩的 zip 字符，再通过一系列方法将其转换为 Blob URL;(相关原理代码如下)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">blobify</span><span class="token punctuation">(</span><span class="token parameter">strData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>strData<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">!=</span>strData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> strData<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> buf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> excelBlob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">blobify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&quot;application/octet-stream&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> blobURL<span class="token operator">=</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>excelBlob<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一些说明</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;test.xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 将一个 worksheet 添加到 workbook</span>
<span class="token keyword">var</span> ws_name <span class="token operator">=</span> <span class="token string">&quot;SheetJS&quot;</span><span class="token punctuation">;</span>
<span class="token comment">/* make worksheet */</span>
<span class="token keyword">var</span> ws_data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;J&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;S&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>  <span class="token number">1</span> <span class="token punctuation">,</span>  <span class="token number">2</span> <span class="token punctuation">,</span>  <span class="token number">3</span> <span class="token punctuation">,</span>  <span class="token number">4</span> <span class="token punctuation">,</span>  <span class="token number">5</span> <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ws <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">aoa_to_sheet</span><span class="token punctuation">(</span>ws_data<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// s 意为 start ，即开始的单元格</span>
<span class="token comment">// e 意为 end ，即结束的单元格</span>
<span class="token comment">// r 是 row ，表示行号，从 0 计起</span>
<span class="token comment">// c 是 col ，表示列号，从 0 计起</span>

<span class="token comment">// !ref&quot;表示显示的范围，例：A1到E3</span>

<span class="token comment">/* Add the worksheet to the workbook */</span>
<span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> ws_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 返回 { SheetNames: [], Sheets: {} };</span>

<span class="token comment">// SheetNames excel表格的 sheet 名称列表</span>
<span class="token comment">// Sheets excel表格的对应 sheet 内容列表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关业务实现代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function-variable function">exportData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@des</span> 生成excel
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Array <span class="token punctuation">}</span></span> <span class="token parameter">data</span> ([[name, score],[&#39;hew&#39;, 80]]) 
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> String <span class="token punctuation">}</span></span> <span class="token parameter">name</span> 表格名称
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;table&#39;</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 设置文件名以及格式, 默认xlsx */</span>
        <span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">?</span> name <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.xlsx</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** Excel第一个sheet的名称 */</span>
        <span class="token keyword">const</span> wsName <span class="token operator">=</span> <span class="token string">&#39;sheet&#39;</span><span class="token punctuation">;</span> 
        <span class="token keyword">const</span> newBook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">aoa_to_sheet</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 将数据添加到工作薄 */</span>
        <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>newBook<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> wsName<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>newBook<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 下载文件到本地</span>
    <span class="token punctuation">}</span>

    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;h2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;h3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;h4&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;中文&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;表格&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详细实现demo 参考 react-admin -&gt; third -&gt; sheetJS</p><h3 id="导出pdf" tabindex="-1"><a class="header-anchor" href="#导出pdf" aria-hidden="true">#</a> 导出PDF</h3><h4 id="利用打印" tabindex="-1"><a class="header-anchor" href="#利用打印" aria-hidden="true">#</a> 利用打印</h4><ul><li>在浏览器弹出的打印页面，点击选择目标打印机，选择另存为PDF</li></ul><h4 id="引入-jspdf-和-html2canvas" tabindex="-1"><a class="header-anchor" href="#引入-jspdf-和-html2canvas" aria-hidden="true">#</a> 引入 jspdf 和 html2canvas</h4><ul><li>主要代码</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token function">html2canvas</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.need-pdf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> canvasWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width
    <span class="token keyword">let</span> canvasHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height
    <span class="token comment">// a4纸的尺寸[595.28,841.89]</span>
    <span class="token keyword">let</span> pageHeight <span class="token operator">=</span> canvasWidth <span class="token operator">/</span> <span class="token number">592.28</span> <span class="token operator">*</span> <span class="token number">841.89</span>
    <span class="token keyword">let</span> imgWidth <span class="token operator">=</span> <span class="token number">595.28</span>
    <span class="token keyword">let</span> imgHeight <span class="token operator">=</span> <span class="token number">592.28</span> <span class="token operator">/</span> canvasWidth <span class="token operator">*</span> canvasHeight
    <span class="token keyword">let</span> pageData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span>

    <span class="token keyword">let</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">jsPDF</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a4&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvasHeight <span class="token operator">&lt;</span> pageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 参数说明：图片数据，格式，距左边距，距上边距，图宽，图高，...(其它参数)  这里的单位都和上面创建pdf实例时一致</span>
        pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token string">&#39;JPEG&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 分页操作，以下操作方式较为粗糙，分页处直接分割内容 </span>
        <span class="token keyword">let</span> theRestHeight <span class="token operator">=</span> canvasHeight<span class="token punctuation">;</span>
        <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>theRestHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 原理是将同一张图放在不同页面，但上移不同的距离，实现分页</span>
            pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token string">&#39;JPEG&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span>
            theRestHeight <span class="token operator">-=</span> pageHeight
            y <span class="token operator">-=</span> <span class="token number">841.89</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>theRestHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                pdf<span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    pdf<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token string">&#39;table.pdf&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下载图片-或-其它文件" tabindex="-1"><a class="header-anchor" href="#下载图片-或-其它文件" aria-hidden="true">#</a> 下载图片 或 其它文件</h3><h4 id="利用-canvas-将-dom-生成图片并下载" tabindex="-1"><a class="header-anchor" href="#利用-canvas-将-dom-生成图片并下载" aria-hidden="true">#</a> 利用 canvas 将 dom 生成图片并下载</h4><ul><li><p>html2canvas 原理是读取DOM，并根据规则在画布上绘制，但部分css样式是无法实现的</p></li><li><p>如果有滑动条 需要将滑动条滚到要截取的DOM顶部</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 配置项 https://html2canvas.hertzen.com/configuration</span>
<span class="token comment">// allowTaint: true  使背景图或img引入的图片生效</span>
<span class="token function">html2canvas</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">allowTaint</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 防止截图不完整</span>
    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// toDataURL 方法参见 javascript.md</span>
    <span class="token keyword">var</span> d <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment">// downloadFile 方法参见下文</span>
    <span class="token function">downloadFile</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="利用跳转" tabindex="-1"><a class="header-anchor" href="#利用跳转" aria-hidden="true">#</a> 利用跳转</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>window.open(&#39;a.zip&#39;);

location.href = &#39;a.zip&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会出现URL长度限制问题；浏览器可直接浏览的类型无法下载如txt、png、jpg、gif等；不能添加header，也就不能进行鉴权；不知道下载的进度</p><hr><h4 id="利用-a-标签-download" tabindex="-1"><a class="header-anchor" href="#利用-a-标签-download" aria-hidden="true">#</a> 利用 a 标签 download</h4><p>存在兼容问题，并且必须是同源图片(非同源会在新标签页打开)</p><p>download属性值要跟图片格式 且必须是同源才能设置文件名<br><code>Content-Disposition: attachment; filename=&quot;filename.jpg&quot;</code> 可以让后端这是整个属性 来配置文件名</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">download</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>new-name.jpg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>下载图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">downloadFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> aEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> urlArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 如果没有name，或直接用链接上的name  酌情删除相关代码</span>
        name <span class="token operator">=</span> urlArray<span class="token punctuation">[</span>urlArray<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>
    aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> name <span class="token operator">||</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 默认是链接上的文件名</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>aEle<span class="token punctuation">)</span> <span class="token comment">// 可以不注入到 DOM chrome 测试有效</span>
    aEle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 判断是否支持download</span>
<span class="token string">&#39;download&#39;</span> <span class="token keyword">in</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="利用-canvas-结合-image-下载图片" tabindex="-1"><a class="header-anchor" href="#利用-canvas-结合-image-下载图片" aria-hidden="true">#</a> 利用 canvas 结合 Image 下载图片</h4><p>如果是放 cdn 或是 图片服务器（服务器也要设置允许跨域）</p><p>toDataURL 如果本地开发引入图片 会报跨域错误 可以将图片转为base64 直接使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvasEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> canvasEle<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> imgEle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
imgEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;crossOrigin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;anonymous&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
imgEle<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    canvasEle<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    canvasEle<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> aEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> canvasEle<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cross.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aEle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
imgEle<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;xxx.jpg&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="利用-ajax-请求-后端返回二进制流-结合-blob-下载图片-excel-等类型文件" tabindex="-1"><a class="header-anchor" href="#利用-ajax-请求-后端返回二进制流-结合-blob-下载图片-excel-等类型文件" aria-hidden="true">#</a> 利用 ajax 请求，后端返回二进制流，结合 Blob ，下载图片 excel 等类型文件</h4><p>要求也是同上，只是不需要兼容 crossOrigin；可以设置 header 请求时要带上 responseType = &#39;blob&#39;;</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ajax 直接请求</span>
<span class="token keyword">function</span> <span class="token function">dl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/xx/xx&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
         * @des 利用 Blob
         */</span>
        <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> aEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> canvasEle<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aEle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cross.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aEle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 释放内存</span>
        <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/*
         * @des 利用 base64
         */</span>
        <span class="token keyword">const</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileReader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> aEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            aEle<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            aEle<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&#39;fileName.doc&#39;</span><span class="token punctuation">;</span>
            aEle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

注意如果项目中有使用 mock 可能会导致下载出错

<span class="token comment">// axios 请求  </span>
<span class="token keyword">function</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> httpService <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">httpService</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span> <span class="token comment">// 或者 blob</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>       
        <span class="token comment">/*
            type 类型
            .doc  application/msword
            .docx application/vnd.openxmlformats-officedocument.wordprocessingml.document
            .xls  application/vnd.ms-excel
            .xlsx application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
            .ppt  application/vnd.ms-powerpoint
            .pptx application/vnd.openxml   formats-officedocument.presentationml.presentation
            .ppt  text/csv
        */</span>
        <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;application/vnd.ms-excel;charset=UTF-8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 始测这里不带类型下载页可以</span>
        <span class="token keyword">const</span> eleA <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
        eleA<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
        eleA<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;-file&#39;</span>
        <span class="token comment">// document.querySelector(&#39;body&#39;).append(eleA)</span>
        eleA<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文件流返回，获取文件名</li></ul><p>header上有 Content-Disposition 其值有一段的内容是 <code>filename=xxxxxx.xlsx; filename*=xxxxxxy</code></p><p>filename* 后跟的就是现代浏览器都支持较好的 文件名</p><p>如果获取不到 Content-Disposition 的值， 就需要后端配合设置 Access-Control-Expose-Headers = Content-Disposition</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> disposition <span class="token operator">=</span> xhr<span class="token punctuation">.</span><span class="token function">getResponseHeader</span><span class="token punctuation">(</span><span class="token string">&#39;content-disposition&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// axios 中 直接 result.headers[&#39;content-disposition&#39;] 获取</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>disposition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 具体的获取方法根据实际字符串而定</span>
    <span class="token keyword">let</span> filename <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">filename\\*=(.*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 不要后最名 ([^.]*)</span>
    filename <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 中文如果出现乱码 需要后端进行编码, 编码后还是有问题 可以参考如下编码方式</span>
<span class="token comment">// import java.net.URLEncoder;</span>
<span class="token comment">// httpHeaders.add(&quot;Content-disposition&quot;, &quot;attachment; filename=\\&quot;&quot; + fileName + &quot;\\&quot;&quot;); //httpHeaders.add(&quot;Content-Type&quot;, mimeType + &quot;; name=\\&quot;&quot; + fileName + &quot;\\&quot;&quot;);</span>
<span class="token comment">// String encodedFileName = URLEncoder.encode(fileName, &quot;UTF-8&quot;); httpHeaders.add(&quot;Content-disposition&quot;, &quot;attachment; filename*=UTF-8&#39;&#39;&quot; + encodedFileName ); httpHeaders.add(&quot;Content-Type&quot;, mimeType + &quot;;charset=UTF-8&quot;);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若以上方式无法解决名称获取，只能后端配合添加自定义 header</p>`,44),m={href:"https://github.com/WarrenHewitt/blog/issues",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const t=e("router-link"),o=e("ExternalLinkIcon");return l(),i("div",null,[n("nav",r,[n("ul",null,[n("li",null,[a(t,{to:"#导出excel、pdf和下载文件"},{default:p(()=>[s("导出Excel、PDF和下载文件")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#导出-excel-利用xlsx插件"},{default:p(()=>[s("导出 Excel （利用xlsx插件）")]),_:1})]),n("li",null,[a(t,{to:"#导出pdf"},{default:p(()=>[s("导出PDF")]),_:1})]),n("li",null,[a(t,{to:"#下载图片-或-其它文件"},{default:p(()=>[s("下载图片 或 其它文件")]),_:1})])])])])]),d,n("blockquote",null,[n("p",null,[s("欢迎交流 "),n("a",m,[s("Github"),a(o)])])])])}const f=c(k,[["render",v],["__file","exportDownloadFile.html.vue"]]);export{f as default};

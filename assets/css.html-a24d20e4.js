import{_ as o,M as i,p as c,q as u,R as n,N as a,V as t,t as s,a1 as p}from"./framework-7e1a102e.js";const r={},d={class:"table-of-contents"},k=p(`<p>[toc]</p><ul><li><p>user agent stylesheet 浏览器自动添加的最底层样式 直接覆盖样式即可</p></li><li><p>*：ie6，ie7可识别；_和-ie6可识别；</p></li><li><p>-webkit-appearance: none; 去掉type=number的默认样式</p></li><li><p>initial(设置为默认效果); inherit：继承父元素的该属性；</p></li><li><p>min-width width max-width 设置后，需要刷新页面才能生效，拖动页面无效</p></li><li><p>width:auto 和 100% 区别是auto包含了margin，padding不会出现滚动条</p></li><li><p>auto (1) 一侧定值，一侧auto，auto为剩余空间大小; (2) 两侧均是auto，平分剩余空间</p></li><li><p><code>&lt;hr style=&#39;height:1px;background:#e0e0e0;border:0&#39;&gt;</code> 实现一条横线</p></li><li><p>text-rendering CSS 属性定义浏览器渲染引擎如何渲染字体</p></li><li><p>当为行内元素进行定位时，position:<strong>absolute</strong>，position:fixed。都会使原先的行内元素变为块级元素。</p></li><li><p>当父级元素在使用 transform 时，position:fixed 会根据其进行定位而不是视口</p></li><li><p>position: sticky 当元素滚动出视口时，根据当前设置的 top 等进行固定</p></li><li><p>div的宽高等比缩放，用padding-bottom height:0 margin padding 百分比是以宽度来计算</p></li><li><p>user-select：none 禁止用户选择</p></li><li><p>::before css3 语法 :before 用来支持IE8</p></li><li><p><code>visibility: hidden</code> 只是隐藏，还是会占据其对应的宽高所在的区域</p></li><li><p>8位16进制颜色 #ffffff80 最后两位表示不透明度，计算方式： (255*50%) 转16进制 常用不透明度： ff 不透明，e6 90%，cc 80, b3 79%, 99 60%, 80 50%，66 40%, 4d 30%, 33 20%, 1a 10%, 0d 5%, 00 完全透明</p></li><li><p>对照表参考 不透明度： https://juejin.cn/post/6989558883815522335?from=search-suggest</p></li><li><p>img replace 元素 谷歌是不管有没有src属性，设置了宽高就会有一个边框显示，只能用一个小的透明图片占位去除边框;<br> 火狐是只要 src 没有值或设置了 alt值为空就不会占位，没有任何效果；</p></li><li><p>mix-blend-mode: 元素的内容应该与元素的直系父元素的内容和元素的背景如何混合 (darken混合模式,哪个颜色深就使用哪个颜色)</p></li><li><p>::selection { background:blue; color:red;} 设置鼠标选中文本样式</p></li><li><p>去掉 input type = number 的加减按钮 和修改 placeholder 颜色</p></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input::-webkit-outer-spin-button(这个可以不写，都不支持了), input::-webkit-inner-spin-button</span> <span class="token punctuation">{</span> <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">input[type=&quot;number&quot;]</span> <span class="token punctuation">{</span> <span class="token property">-moz-appearance</span><span class="token punctuation">:</span> textfield<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token selector">textarea::-webkit-input-placeholder</span><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #cacaca<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">input::-webkit-input-placeholder</span><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #cacaca<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>vertical-align 的百分比值是相对于line-height计算的</li></ul><hr><ul><li>counter</li></ul>`,6),v={href:"https://codepen.io/Hewitt/pen/qBZBxmy",target:"_blank",rel:"noopener noreferrer"},m=p(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.level1</span><span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> count1 3<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">// 3 表示序号从4开始  count1 为任意命名
.level1::before</span><span class="token punctuation">{</span> <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>count1， upper-roman<span class="token punctuation">)</span><span class="token string">&quot;、&quot;</span><span class="token punctuation">;</span> <span class="token property">counter-increment</span><span class="token punctuation">:</span> count1<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>filter</li></ul><p><code>filter:blur(90px)</code> // 高斯模糊,ie不支持,其它都可，注意前缀。 <code>filter:grayscale()</code> html 标签添加该属性，可让<strong>页面变黑白</strong>（可以加一个固定结束时间判断，避免为了这个问题重复上线两次） <code>filter: drop-shadow</code> 为透明元素添加阴影效果不止于在图片四周加阴影 也会在图片中物体四周加阴影 <code>filter: brightness(110%) saturate(140%);</code> 让元素高亮 <code>backdrop-filter: blur(10px);</code> 毛玻璃效果用 效果看起来更好 先用ps将图片对比度等降低，以减小图片尺寸，在利用 filter 增大图片对比度，以此来实现图片资源优化</p>`,4),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter",target:"_blank",rel:"noopener noreferrer"},h=p(`<hr><h2 id="阿里-icon-font-使用方法" tabindex="-1"><a class="header-anchor" href="#阿里-icon-font-使用方法" aria-hidden="true">#</a> 阿里 icon-font 使用方法</h2><p>可参考 vue-admin 项目的 welcome 页面</p><ol><li>图标管理 -&gt; 我的项目 -&gt; 选中Symbol -&gt; 查看在线链接 -&gt; 点击生成在线js代码，引入到html文件 (如果不)</li><li>设置单个图标</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.icon</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> -0.15em<span class="token punctuation">;</span>
  <span class="token property">fill</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 这里的href值一般是icon的名称 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#icon-shoutao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 以 -- 开头 */</span>
<span class="token comment">/* 必须在一个规则集中,表示在该域下可用 一般是在 :root 中 全局使用； */</span>
<span class="token selector">:root</span> <span class="token punctuation">{</span>  
  <span class="token property">--some-name</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span><span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--some-name<span class="token punctuation">)</span>  使用
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="伪类-伪元素" tabindex="-1"><a class="header-anchor" href="#伪类-伪元素" aria-hidden="true">#</a> 伪类 伪元素</h2><p>伪类(pseudo-classes)： 选择的文档之外的元素，如:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">:</span>root 匹配文档树的根元素。对于 HTML 来说，表示 &lt;html&gt; 元素，除了优先级更高之外，与 html 选择器相同。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>伪元素(Pseudo-elements)：创建通常不存在于文档中的元素，如::before</p><p>CSS2 中伪类、伪元素都是以单冒号:表示，CSS2.1 后规定伪类用单冒号表示，伪元素用双冒号::表示，浏览器同样接受 CSS2 时代已经存在的伪元素(:before, :after, :first-line, :first-letter 等)的单冒号写法。对于 CSS2 之后所有新增的伪元素(如::selection)，应该采用双冒号的写法。但是因为兼容性问题，大部分还是用的单冒号。</p><h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h3><p>!important &gt; 内联 &gt; ID &gt; 类 &gt; 类型</p><p>A id选择器的数量 B 类、属性、伪类选择器的数量 C 类型和伪元素的数量</p><ul><li><p>::before css3 语法 :before 用来支持IE8</p></li><li><p>既不是 <code>&lt;div&gt;</code> 也不是 <code>&lt;span&gt;</code> 的元素 <code>body :not(div):not(span)</code></p></li><li><p>div:nth-child(1|odd(奇)|even(偶)) 选择div, 该div 刚好是父元素的第1个子元素 即为选中</p></li><li><p>div:nth-of-type(1) 选择div，该div 属于父元素的 div 这类子元素的第1个 即为选中 按 div 这个类别来计数</p></li><li><p>span:last-of-type 选择父元素下的span标签的最后一个（只计span这一类）</p></li><li><p>span:last-child 选择父元素下的最后一个标签，如果是span就选中，不是就不选中</p></li><li><p><code>~</code>: .a(元素1)~.b(元素2),同一个父元素下的兄弟元素,不必是挨着的但是必须是元素1之后的。</p></li><li><p><code>[attribute~=value]</code> :属性包含某个值的元素</p></li><li><p><code>.a+.b</code> 相邻兄弟选择器 紧接在另一个元素后的元素 如果.a元素后紧跟的是.b即可选中。</p></li><li><p><code>.a &gt; .b</code> 选中.a的子一级的所有.b元素不包含孙一级。</p></li></ul><p>a:link {color: #FF0000} <em>未访问时的状态</em><br> a:visited {color: #00FF00} <em>已访问过的状态</em><br> a:hover {color: #FF00FF} <em>鼠标移动到链接上时的状态</em><br> a:active {color: #0000FF} <em>鼠标按下去时的状态</em></p><ul><li>:checked 可以作用于radio checkbox option</li></ul><h2 id="文本处理" tabindex="-1"><a class="header-anchor" href="#文本处理" aria-hidden="true">#</a> 文本处理</h2><ol><li><p>font：normal bold 12px/50px(行高可以写在这里) arial,sans-serif；合并写必须要有size和family</p></li><li><p>@font-face{ font-family: myFontFamilyName; src: url()} 使用 <code>p{ font-family: myFontFamilyName }</code> 这里加载的字体，只有在有地方引用时才会去下载字体包</p></li><li><p>line-height:10% 基于当前字体尺寸的百分比行间距</p></li></ol><ul><li>text-fill-color 文字填充颜色 同时设置了text-fill-color和color,color不会起作用</li></ul><h3 id="超出省略文本" tabindex="-1"><a class="header-anchor" href="#超出省略文本" aria-hidden="true">#</a> 超出省略文本</h3><p>单行：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多行：(不能设置高度)</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span>-webkit-box<span class="token punctuation">;</span> // <span class="token property">display</span><span class="token punctuation">:</span>flex 之前的版本
  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span>3<span class="token punctuation">;</span>  // 依赖于box布局
  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>word-spacing:10px 定义单词间的间距<br> letter-spacing:10px 定义每个字间的间距（与text-indent联用,否则起始位置缩进有问题）</p><h3 id="换行" tabindex="-1"><a class="header-anchor" href="#换行" aria-hidden="true">#</a> 换行</h3><p>word-break :break-all;只对英文起作用，以字母作为换行依据<br> word-wrap :break-word; 只对英文起作用，以单词作为换行依据<br> white-space :pre-wrap; 只对中文起作用，强制换行<br> white-space :nowrap; 强制不换行，都起作用(对inner-block的标签也起作用) (文本不换行直到遇到&lt; br/&gt;;标签)</p><hr><h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h2><p>标准和IE</p><h3 id="w3c标准" tabindex="-1"><a class="header-anchor" href="#w3c标准" aria-hidden="true">#</a> W3C标准</h3><p>width,height只包含内容content，不包含border和padding</p><h3 id="ie" tabindex="-1"><a class="header-anchor" href="#ie" aria-hidden="true">#</a> IE</h3><p>width,height包含border和padding</p><ul><li>box-sizing</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span> 默认，设置的 width 不包含padding和border宽度
<span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> 设置的 width 包含padding和border，不包含 margin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h2><h3 id="bfc-块格式化上下文-block-formatting-context" tabindex="-1"><a class="header-anchor" href="#bfc-块格式化上下文-block-formatting-context" aria-hidden="true">#</a> BFC 块格式化上下文 (Block Formatting Context)</h3><p>是 Web 页面中盒模型布局的 CSS 渲染模式，指一个独立的渲染区域或者说是一个隔离的独立容器。</p><p>相邻或者嵌套的元素，之间没有非空内容(Padding,Border分隔)的两个或更多盒元素的margin将会合并(都为正数，采用较大的值)</p><p>两个元素只有在<strong>同一</strong>BFC 内，才有可能发生垂直外边距的重叠，包括相邻元素、嵌套元素</p><h4 id="如何创建bfc" tabindex="-1"><a class="header-anchor" href="#如何创建bfc" aria-hidden="true">#</a> 如何创建BFC</h4><p>float:left | float:right; 导致下边的元素上移 position:absolute | position:fixed display:inline-block 宽度丢失 | display:flex | display:table | table-cell、table-caption、inline-table、inline-flex、grid、inline-grid； overflow值不为visible：overflow:hidden; | overflow:auto、overflow:scroll; display:flow-root 新BFC创建新方式，没有副作用，注意兼容</p><ol><li>margin,padding用百分比时:都是相对于父元素的宽;</li><li>left,top:百分比相对宽,高</li><li>ul,ol都有一个padding和margin;li前面的样式不会占用宽度，它是占用ul的padding,但是只针对outside而言,对于inside要占用宽度,去掉li前面点用 list-style-type: none;</li></ol><ul><li>右边固定宽度，左边自适应 <ol><li>float 方式 html中，右边固定元素要在前，设置样式 float:right 自适应元素设置 margin-right: 固定宽度</li><li>flex实现</li></ol></li></ul><hr><h3 id="flex布局" tabindex="-1"><a class="header-anchor" href="#flex布局" aria-hidden="true">#</a> flex布局</h3><ul><li><p>子元素的 float clear vertical-aline 属性将失效。</p></li><li><p>容器设置display:flex;(任何元素都可以设置，行内用display:inline-flex设置之后该容器将不会再占用一行);</p></li></ul><h4 id="父容器的6个属性" tabindex="-1"><a class="header-anchor" href="#父容器的6个属性" aria-hidden="true">#</a> 父容器的6个属性：</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.css</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 1. 排列方向 row-reverse(反向) | column | column-reverse */</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>     

  <span class="token comment">/* 2. (内部元素不换行且会改变元素宽度)|wrap(内部元素换行)|wrap-reverse(换行且第一行在下面) */</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>   

  <span class="token comment">/* 3. 将 flex-direction 和 flex-wrap 组合为简写属性 flex-flow */</span>
  <span class="token property">flex-flow</span><span class="token punctuation">:</span> row nowrap<span class="token punctuation">;</span>  

  <span class="token comment">/* 4. 内部元素水平方向上的对齐方式 flex-start(|-- |)| flex-end(| --|) center(| -- |) space-between(|- -|) space-around(每个元素件的间隔相同，是与边距的两倍)*/</span>  
  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>           
  
  <span class="token comment">/* 5. 垂直方向设置， stretch(项目被拉伸，适应容器)；center垂直居中 flex-start flex-end baseline(位于容器的基线上，第一行文字的基线对齐)   */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span>

  <span class="token comment">/* 6. 与 align-items 相似 但是是针对 多行 容器生效 垂直方向上 */</span>
  <span class="token property">align-content</span><span class="token punctuation">:</span> 
  <span class="token comment">/* stretch(占满，从上往下，顶部没有边距，往下项目间距相同)  
  flex-start(上对齐默认)|  
  flex-end(下对齐)  
  center(居中)  
  space-between(两端对齐，边距为0)  
  space-around(每个元素的间隔相同，是与边距的两倍)  */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="子容器的6个属性" tabindex="-1"><a class="header-anchor" href="#子容器的6个属性" aria-hidden="true">#</a> 子容器的6个属性</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.css</span><span class="token punctuation">{</span>
  <span class="token property">order</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* 越小越靠前； */</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* 项目的放大比例，为1时就等分，当有一个是2时该项目将会是其它的两倍 */</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* 当空间不足时，都将等比例缩小, 0 时表示不收缩 */</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token comment">/* px|% 设置宽度 */</span>
  <span class="token comment">/* 是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto) 建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值 */</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token comment">/* 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。除了auto，其他都与align-items属性完全一致 */</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="一些用法" tabindex="-1"><a class="header-anchor" href="#一些用法" aria-hidden="true">#</a> 一些用法</h4><ul><li>当某个子元素设置了 <code>flex:1</code> 其它子元素没有设置，它将占据剩余的所有宽度</li></ul><ol><li>子元素两端对齐，并且垂直居中;父元素中：</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.p</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 垂直居中 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>水平方向滚动</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.p</span><span class="token punctuation">{</span> <span class="token comment">/* 父 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.c</span><span class="token punctuation">{</span> <span class="token comment">/* 子 */</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>垂直布局，上部高度不定，超出内容出现滑动条，底部固定高度且吸底</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span> <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">/* 这里也可以设置高度 height: calc(100vh - 80px) */</span>
<span class="token selector">.top</span> <span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token punctuation">}</span> 
<span class="token selector">.bottom</span> <span class="token punctuation">{</span> <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>一行有三个元素，两边的元素各自给宽度，中间元素自适应</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.left</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 100px <span class="token punctuation">}</span>
<span class="token selector">.center</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.right</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 100px <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>box-shadow:水平(可为负)<strong>必须</strong>，垂直(可为负)<strong>必须</strong>，模糊距离值越大边沿越模糊，阴影扩展半径(就是元素外面的阴影的宽度值)值越大阴影面积越大为负值时阴影缩小，阴影颜色，将inset改为outset;</p><p>阴影的大小和被设置的元素大小一样；</p><p>box-shadow:可以用逗号隔开来设置不同的边的阴影，但是要注意设置水平和垂直位置。（不能分开写多个box-shadow来设置）</p><p>box-shadow:<br> -10px 0 10px red, <em>左边阴影</em><br> 10px 0 10px yellow, <em>右边阴影</em><br> 0 -10px 10px blue, <em>顶部阴影</em><br> 0 0 10px 10px green; <em>底边阴影</em></p><p>如果只要一边阴影，就把扩展阴影设为负值。注意所有的边都是一个整体的矩形，意思是设置右边的阴影时 如果水平移动过多 会在左边出现</p><p><code>text-shadow</code>: X 和 Y 方向的偏移量、模糊半径、颜色 多个阴影用逗号隔开</p><h3 id="居中" tabindex="-1"><a class="header-anchor" href="#居中" aria-hidden="true">#</a> 居中</h3><ul><li>利用 calc() 计算</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.ele</span><span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> 
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span> // 注意运算符号前后要加空格
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vertical-aline:是依赖当前元素是inline-block才会有效果；该属性定义行内元素的基线相对于该元素所在行的基线的垂直对齐。<br> 图片垂直居中：设置了高和行高，再加vertical-aline：middle；<br> 当在设置verticla-aline:middle相当于强行的把父元素的行高(就等于设置vertical-aline的元素的高度,这个高度可以不定)给设置了（基线的底部就是行的底部）；后面再有元素设置verticla-aline:middle，就会把自身的垂直中点与中线对齐。</p><hr><p>将文字放在底部:<br> 在元素中多加一个标签，父元素为relative，子元素absolute，把子元素设置bottom：0；</p><hr><p>margin:0 auto;居中<br> 该元素不必有确定的px值也可以是%比,，并且不能是绝对定位。且该元素必须为块级元素。</p><hr><p>元素垂直水平居中：<br> 绝对定位,且设置了宽高： <code>left:50%; right:50%; margin-left:-width/2; margin-top:-height/2;</code><br> 没有设置宽高：使用 <code>transform:translateX(%)</code> 相对于元素本身宽高来缩进，替代 margin</p><hr><p>垂直居中：</p><ol><li>该方法适用于多行文本</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>table-cell<span class="token punctuation">;</span> <span class="token property">vertical-align</span><span class="token punctuation">:</span>middle<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将元素高度和line-height设置为相同值；如果元素没有设置高度，也可以直接设置line-height来实现。</li><li>用padding：10px 0；来实现，高度就不定了。</li><li>用</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>内容&lt; /div&gt;  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在外部div上设置高度和用:before(在使用的元素的内部内容之前添加内容);会在内部div之前加上一个元素（content:.）;设置行高line-height，然后在父元素上设置font-size：0（让点不可见和消除元素之间的换行），再将内容的div元素设置为inline-block和加上vertical-aline:middle;或者是两个都设置vertical-aline:middle,就可以不用设置line-height；但要设置before的高度；</p><hr><h3 id="行内块级" tabindex="-1"><a class="header-anchor" href="#行内块级" aria-hidden="true">#</a> 行内块级</h3><p><strong>inline-block</strong> 可设置宽高并可在同一行:元素有input select;当使用行内元素时注意html中是否有换行或是空格，会被显示在页面上。</p><p>inline-block，是基于baseline对齐的，大小不一会导致上下不齐，所以设置的时候最好设置vertical-align属性,top、bottom、middle都可</p><hr><p>inline:水平方向padding margin有效</p><hr><h3 id="宽高" tabindex="-1"><a class="header-anchor" href="#宽高" aria-hidden="true">#</a> 宽高</h3><p>宽高设置为百分比，会是根据父元素是否已确定了高度，如果是即可以用；<br> 当涉及到body为父元素时，要把body和html的宽高都设置为100%，单设一个不起作用。<br> 但是当设置了position：absolute/fixed的是会起作用的；</p><hr><p>在页面上加载过一次该图片后，无论你是在当前页面再次使用该图片还是在该站点的其它页面使用，都会调用缓存。</p><h2 id="滑动条" tabindex="-1"><a class="header-anchor" href="#滑动条" aria-hidden="true">#</a> 滑动条</h2><p>overflow:hidden;auto（只会出现宽或高的滑动条）;scroll(会出现宽和高的滑动条)前提是要有宽高；</p><p>text-overflow:ellipsis;（不换行超出部分隐藏且以省略号形式出现）；clip(修剪文本)；</p><p>去掉滑动条： 选择器::-webkit-scrollbar { display: none; }</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> background</h2><p>filter:blur(90px) // 高斯模糊,ie不支持,其它都可，注意前缀。</p><p><code>filter:grayscale()</code> html 标签添加该属性，可让页面变黑白</p>`,110),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter",target:"_blank",rel:"noopener noreferrer"},f=p(`<hr><p>background:hsl(色调hue，饱和度saturation，亮度luminance)</p><ul><li>色调：0-360 红 黄 绿 青 蓝 洋 //循环</li><li>饱和度：0-100% //灰度到全包和</li><li>亮度：0-100% //暗到亮</li><li>还有hsla() //多了一个透明度</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>background：color image repeat fixed position/size  
<span class="token property">-size</span><span class="token punctuation">:</span> <span class="token function">cover</span><span class="token punctuation">(</span>图片不会按比例缩放来覆盖当前元素背景<span class="token punctuation">)</span> <span class="token function">contain</span><span class="token punctuation">(</span>图片会按比例缩放直到宽或高达到当前元素的宽或高<span class="token punctuation">)</span> <span class="token function">content-box</span><span class="token punctuation">(</span>背景图片放在哪里<span class="token punctuation">)</span>  
<span class="token property">-origin</span><span class="token punctuation">:</span> border/ 
<span class="token property">clip</span><span class="token punctuation">:</span> border-box/padding-box/content-box/text<span class="token punctuation">;</span> 设置元素的背景（背景图片或颜色）是否延伸到边框、内边距盒子、内容盒子下面，背景从border/padding/content开始，背景图片最多从padding开始。  <span class="token property">text</span><span class="token punctuation">:</span> 背景被裁剪成文字的前景色
<span class="token property">background-attachment</span><span class="token punctuation">:</span> scroll默认 | fixed滚动轴背景图片不会移动

<span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> no-repeat left/50% 50%<span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> no-repeat right/50% 50%<span class="token punctuation">;</span>
对于多重背景，写在前的在上面；

渐变 <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>blue<span class="token punctuation">,</span> pink<span class="token punctuation">)</span><span class="token punctuation">;</span> 默认上到下

<span class="token property">background-image</span><span class="token punctuation">:</span> 
<span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> red 起点百分比<span class="token punctuation">,</span> green 50%<span class="token punctuation">,</span> blue 终点百分比<span class="token punctuation">)</span><span class="token punctuation">;</span>
起点附近的点具有跟起点相同的颜色值，终点附近的点具有跟终点相同的颜色值

<span class="token punctuation">(</span>to right<span class="token punctuation">,</span>red 10%<span class="token punctuation">,</span> green 50%<span class="token punctuation">,</span> blue 90%<span class="token punctuation">)</span>
0-10% 是纯红色  10%-50% 是红色到绿色的渐变 50% 处是纯绿色  50%-90% 是绿色到蓝色的渐变 90%-100% 是纯蓝色

<span class="token punctuation">(</span>to right<span class="token punctuation">,</span>red 30%<span class="token punctuation">,</span> 颜色过度中点<span class="token punctuation">,</span> green 50%<span class="token punctuation">,</span> 颜色过度中点<span class="token punctuation">,</span> blue 70%<span class="token punctuation">)</span>
起点、终点、中点  有两个的值一样，颜色过度会是一条硬线

<span class="token punctuation">(</span>to right<span class="token punctuation">,</span>#ffffff10 5%<span class="token punctuation">,</span> #ffffff50 10%<span class="token punctuation">,</span> #ffffff50 90%<span class="token punctuation">,</span> #ffffff10 95%<span class="token punctuation">)</span>
两端渐变  中间呈现文字  注意调整百分比控制渐变和透明的比例
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="背景马赛克" tabindex="-1"><a class="header-anchor" href="#背景马赛克" aria-hidden="true">#</a> 背景马赛克</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 多图片用逗号隔开 */</span>
<span class="token property">background-image</span><span class="token punctuation">:</span> 
  <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #cecdcd40<span class="token punctuation">,</span> #cecdcd40<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span>#eee 25%<span class="token punctuation">,</span>transparent 0<span class="token punctuation">,</span>transparent 75%<span class="token punctuation">,</span>#eee 0<span class="token punctuation">,</span>#eee<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #eee 25%<span class="token punctuation">,</span> #fff 0<span class="token punctuation">,</span> #fff 75%<span class="token punctuation">,</span> #eee 0<span class="token punctuation">,</span> #eee<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 注意size和position的二倍关系 */</span>
<span class="token property">background-size</span><span class="token punctuation">:</span> 20px 20px<span class="token punctuation">;</span>
<span class="token comment">/* 只处理第三个 linear的位置 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">,</span> 0 0<span class="token punctuation">,</span> 10px 10px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="视口单位适配布局" tabindex="-1"><a class="header-anchor" href="#视口单位适配布局" aria-hidden="true">#</a> 视口单位适配布局</h2><h3 id="视口" tabindex="-1"><a class="header-anchor" href="#视口" aria-hidden="true">#</a> 视口</h3><ul><li>桌面端：浏览器可视区域</li><li>移动端： <ul><li>Layout Viewport（布局视口）指的是该视口</li><li>Visual Viewport（视觉视口）</li><li>Ideal Viewport（理想视口）</li></ul></li></ul><h3 id="css3视口单位" tabindex="-1"><a class="header-anchor" href="#css3视口单位" aria-hidden="true">#</a> css3视口单位</h3><p>兼容性： 主流版本都支持，只有ie 的10，11 不持支 vmax</p><ul><li>vm：1vw 等于视口宽度的1%（永远指水平方向）</li><li>vh: 1vh 等于视口高度的1%</li><li>vmin : 选取 vw 和 vh 中最小的那个</li><li>vmax : 选取 vw 和 vh 中最大的那个</li></ul>`,12);function x(y,w){const e=i("router-link"),l=i("ExternalLinkIcon");return c(),u("div",null,[n("nav",d,[n("ul",null,[n("li",null,[a(e,{to:"#阿里-icon-font-使用方法"},{default:t(()=>[s("阿里 icon-font 使用方法")]),_:1})]),n("li",null,[a(e,{to:"#变量"},{default:t(()=>[s("变量")]),_:1})]),n("li",null,[a(e,{to:"#伪类-伪元素"},{default:t(()=>[s("伪类 伪元素")]),_:1})]),n("li",null,[a(e,{to:"#选择器"},{default:t(()=>[s("选择器")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#优先级"},{default:t(()=>[s("优先级")]),_:1})])])]),n("li",null,[a(e,{to:"#文本处理"},{default:t(()=>[s("文本处理")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#超出省略文本"},{default:t(()=>[s("超出省略文本")]),_:1})]),n("li",null,[a(e,{to:"#换行"},{default:t(()=>[s("换行")]),_:1})])])]),n("li",null,[a(e,{to:"#盒模型"},{default:t(()=>[s("盒模型")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#w3c标准"},{default:t(()=>[s("W3C标准")]),_:1})]),n("li",null,[a(e,{to:"#ie"},{default:t(()=>[s("IE")]),_:1})])])]),n("li",null,[a(e,{to:"#布局"},{default:t(()=>[s("布局")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#bfc-块格式化上下文-block-formatting-context"},{default:t(()=>[s("BFC 块格式化上下文 (Block Formatting Context)")]),_:1})]),n("li",null,[a(e,{to:"#flex布局"},{default:t(()=>[s("flex布局")]),_:1})]),n("li",null,[a(e,{to:"#居中"},{default:t(()=>[s("居中")]),_:1})]),n("li",null,[a(e,{to:"#行内块级"},{default:t(()=>[s("行内块级")]),_:1})]),n("li",null,[a(e,{to:"#宽高"},{default:t(()=>[s("宽高")]),_:1})])])]),n("li",null,[a(e,{to:"#滑动条"},{default:t(()=>[s("滑动条")]),_:1})]),n("li",null,[a(e,{to:"#background"},{default:t(()=>[s("background")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#背景马赛克"},{default:t(()=>[s("背景马赛克")]),_:1})])])]),n("li",null,[a(e,{to:"#视口单位适配布局"},{default:t(()=>[s("视口单位适配布局")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#视口"},{default:t(()=>[s("视口")]),_:1})]),n("li",null,[a(e,{to:"#css3视口单位"},{default:t(()=>[s("css3视口单位")]),_:1})])])])])]),k,n("p",null,[n("a",v,[s("codepen 示例"),a(l)])]),m,n("p",null,[s("其它的一些滤镜效果参考 "),n("a",b,[s("MDN"),a(l)])]),h,n("p",null,[s("其它的一些滤镜效果参考 "),n("a",g,[s("MDN"),a(l)])]),f])}const q=o(r,[["render",x],["__file","css.html.vue"]]);export{q as default};
